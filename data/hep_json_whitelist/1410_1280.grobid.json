{
    "level": "sentence",
    "abstract": [
        {
            "text": "We present a software framework for statistical data analysis, called HistFitter, that has been used extensively by the ATLAS Collaboration to analyze big datasets originating from proton-proton collisions at the Large Hadron Collider at CERN. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "Since 2012 HistFitter has been the standard statistical tool in searches for supersymmetric particles performed by ATLAS. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "HistFitter is a programmable and flexible framework to build, book-keep, fit, interpret and present results of data models of nearly arbitrary complexity. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "Starting from an object-oriented configuration, defined by users, the framework builds probability density functions that are automatically fit to data and interpreted with statistical tests. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "Internally HistFitter uses the statistics packages RooStats and HistFactory. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "A key innovation of Hist-Fitter is its design, which is rooted in analysis strategies of particle physics. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "The concepts of control, signal and validation regions are woven into its fabric. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "These are progressively treated with statistically rigorous built-in methods. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "Being capable of working with multiple models at once that describe the data, HistFitter introduces an additional level of abstraction that allows for easy bookkeeping, manipulation and testing of large collections of signal hypotheses. ",
            "paragraph_rank": 2,
            "section_rank": 1
        },
        {
            "text": "Finally, HistFitter provides a collection of tools to present results with publication quality style through a simple command-line interface.",
            "paragraph_rank": 2,
            "section_rank": 1
        }
    ],
    "body_text": [
        {
            "text": "Introduction",
            "section_rank": 2
        },
        {
            "text": "This paper describes a software framework for statistical data analysis, called \"HistFitter\", that has been used extensively by the ATLAS Collaboration [1] to analyze big datasets originating from proton-proton collisions at the Large Hadron Collider (LHC) at CERN. ",
            "section": "Introduction",
            "paragraph_rank": 3,
            "section_rank": 2,
            "ref_spans": [
                {
                    "start": 152,
                    "end": 155,
                    "type": "bibr",
                    "ref_id": "b0",
                    "text": "[1]"
                }
            ],
            "entity_spans": [
                {
                    "start": 23,
                    "end": 31,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w0"
                }
            ]
        },
        {
            "text": "Most notably, Hist-Fitter has become a de facto standard in searches for supersymmetric particles since 2012, see for example [2][3][4][5][6][7][8][9][10][11][12][13][14][15][16][17][18][19], with some usage for Exotic [20,21] and Higgs boson [22] physics. ",
            "section": "Introduction",
            "paragraph_rank": 3,
            "section_rank": 2,
            "ref_spans": [
                {
                    "start": 126,
                    "end": 129,
                    "type": "bibr",
                    "text": "[2]"
                },
                {
                    "start": 129,
                    "end": 132,
                    "type": "bibr",
                    "ref_id": "b1",
                    "text": "[3]"
                },
                {
                    "start": 132,
                    "end": 135,
                    "type": "bibr",
                    "ref_id": "b2",
                    "text": "[4]"
                },
                {
                    "start": 135,
                    "end": 138,
                    "type": "bibr",
                    "ref_id": "b3",
                    "text": "[5]"
                },
                {
                    "start": 138,
                    "end": 141,
                    "type": "bibr",
                    "ref_id": "b4",
                    "text": "[6]"
                },
                {
                    "start": 141,
                    "end": 144,
                    "type": "bibr",
                    "ref_id": "b5",
                    "text": "[7]"
                },
                {
                    "start": 144,
                    "end": 147,
                    "type": "bibr",
                    "ref_id": "b6",
                    "text": "[8]"
                },
                {
                    "start": 147,
                    "end": 150,
                    "type": "bibr",
                    "ref_id": "b7",
                    "text": "[9]"
                },
                {
                    "start": 150,
                    "end": 154,
                    "type": "bibr",
                    "ref_id": "b8",
                    "text": "[10]"
                },
                {
                    "start": 154,
                    "end": 158,
                    "type": "bibr",
                    "ref_id": "b9",
                    "text": "[11]"
                },
                {
                    "start": 158,
                    "end": 162,
                    "type": "bibr",
                    "ref_id": "b10",
                    "text": "[12]"
                },
                {
                    "start": 162,
                    "end": 166,
                    "type": "bibr",
                    "ref_id": "b11",
                    "text": "[13]"
                },
                {
                    "start": 166,
                    "end": 170,
                    "type": "bibr",
                    "ref_id": "b12",
                    "text": "[14]"
                },
                {
                    "start": 170,
                    "end": 174,
                    "type": "bibr",
                    "ref_id": "b13",
                    "text": "[15]"
                },
                {
                    "start": 174,
                    "end": 178,
                    "type": "bibr",
                    "ref_id": "b14",
                    "text": "[16]"
                },
                {
                    "start": 178,
                    "end": 182,
                    "type": "bibr",
                    "ref_id": "b15",
                    "text": "[17]"
                },
                {
                    "start": 182,
                    "end": 186,
                    "type": "bibr",
                    "ref_id": "b16",
                    "text": "[18]"
                },
                {
                    "start": 186,
                    "end": 190,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                },
                {
                    "start": 219,
                    "end": 223,
                    "type": "bibr",
                    "ref_id": "b18",
                    "text": "[20,"
                },
                {
                    "start": 223,
                    "end": 226,
                    "type": "bibr",
                    "ref_id": "b19",
                    "text": "21]"
                },
                {
                    "start": 243,
                    "end": 247,
                    "type": "bibr",
                    "text": "[22]"
                }
            ]
        },
        {
            "text": "HistFitter is written in Python and C++, the former being used for configuration and the latter for CPU-intensive calculations. ",
            "section": "Introduction",
            "paragraph_rank": 3,
            "section_rank": 2,
            "entity_spans": [
                {
                    "start": 25,
                    "end": 31,
                    "type": "software",
                    "rawForm": "Python",
                    "resp": "whitelist",
                    "id": "software-simple-w1"
                }
            ]
        },
        {
            "text": "Internally, HistFitter uses the software packages HistFactory [23] and RooStats [24], which are based on RooFit [25] and ROOT [26,27], to construct parametric models and perform statistical tests of the data. ",
            "section": "Introduction",
            "paragraph_rank": 3,
            "section_rank": 2,
            "ref_spans": [
                {
                    "start": 62,
                    "end": 66,
                    "type": "bibr",
                    "ref_id": "b20",
                    "text": "[23]"
                },
                {
                    "start": 80,
                    "end": 84,
                    "type": "bibr",
                    "ref_id": "b21",
                    "text": "[24]"
                },
                {
                    "start": 112,
                    "end": 116,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "[25]"
                },
                {
                    "start": 126,
                    "end": 130,
                    "type": "bibr",
                    "ref_id": "b23",
                    "text": "[26,"
                },
                {
                    "start": 130,
                    "end": 133,
                    "type": "bibr",
                    "ref_id": "b24",
                    "text": "27]"
                }
            ],
            "entity_spans": [
                {
                    "start": 32,
                    "end": 40,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w2"
                },
                {
                    "start": 121,
                    "end": 125,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w3"
                }
            ]
        },
        {
            "text": "HistFitter extends these tools in four key areas:",
            "section": "Introduction",
            "paragraph_rank": 3,
            "section_rank": 2
        },
        {
            "text": "1. Programmable framework: HistFitter performs complete statistical analyses of pre-formatted input data samples, from a single user-defined configuration file, by putting together tools from several sources in a coherent and programmable framework. ",
            "section": "Introduction",
            "paragraph_rank": 4,
            "section_rank": 2
        },
        {
            "text": "2. Analysis strategy: HistFitter has built-in concepts of control, signal and validation regions, which are used to constrain, extrapolate and validate models that describe that data, henceforth called \"data models\", across an analysis. ",
            "section": "Introduction",
            "paragraph_rank": 4,
            "section_rank": 2
        },
        {
            "text": "The framework also introduces a statistically rigorous treatment of the validation regions. ",
            "section": "Introduction",
            "paragraph_rank": 4,
            "section_rank": 2
        },
        {
            "text": "3. Bookkeeping: HistFitter can keep track of numerous data models, including all generated input histograms, both before and after adjustment to measured data, and can perform statistical tests and model-parameter scans of all these models in an organized way. ",
            "section": "Introduction",
            "paragraph_rank": 4,
            "section_rank": 2
        },
        {
            "text": "This introduces a powerful additional level of abstraction, which aids the processing of large collections of signal hypothesis tests.",
            "section": "Introduction",
            "paragraph_rank": 4,
            "section_rank": 2
        },
        {
            "text": "Presentation and interpretation:",
            "section_rank": 3
        },
        {
            "text": "HistFitter provides a collection of methods to determine the statistical significance of signal hypotheses, estimate the quality of likelihood fits, and produce publication-quality tables and plots expressing these results.",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 5,
            "section_rank": 3
        },
        {
            "text": "This paper details these extensions and is organized as follows. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "Section 2 summarizes key concepts of the data analysis strategy used for many searches and measurements at the LHC, and which are ingrained in the HistFitter framework. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "Section 3 describes the central HistFitter configuration, the bookkeeping machinery, and the external statistics software packages that are steered. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3,
            "entity_spans": [
                {
                    "start": 113,
                    "end": 121,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w4"
                }
            ]
        },
        {
            "text": "Section 4 describes the technical implementation of HistFitter, and how support for multiple Probability Density Function (PDF) instances of nearly arbitrary complexity has been implemented with a modular object-oriented design. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "Section 5 explains how the PDFs can be used to perform statistical fits 1 of various types. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "Section 6 describes how these fit results can be conveniently presented and visualized with different methods, for example for validation purposes. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "Finally, Sect. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "7 explains the statistical formalism used, and shows how signal hypotheses can be tested quantitatively in several ways. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "The publicly available release of HistFitter is briefly described in Sect. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "8, before concluding in Sect. ",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "9.",
            "section": "Presentation and interpretation:",
            "paragraph_rank": 6,
            "section_rank": 3
        },
        {
            "text": "Data analysis strategy",
            "section_rank": 4
        },
        {
            "text": "Particle physics experiments require the careful analysis of large data samples, coming from an experimental apparatus, in order to measure the properties of fundamental particles. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 7,
            "section_rank": 4
        },
        {
            "text": "A very active field of research is focused on using these datasets to discover physical processes that have been predicted by theoretical models, but have not yet been observed in nature.",
            "section": "Data analysis strategy",
            "paragraph_rank": 7,
            "section_rank": 4
        },
        {
            "text": "Analyses generally rely on external predictions for the various background and signal components in the data to aid the interpretation of observations, where the signal component describes the process of interest. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 8,
            "section_rank": 4
        },
        {
            "text": "In particle physics, simulations of known and hypothesized physics processes are run through a detailed detector simulation, and are subsequently reconstructed with the same algorithms as the data. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 8,
            "section_rank": 4
        },
        {
            "text": "In addition, background samples can be constructed using data-driven methods. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 8,
            "section_rank": 4
        },
        {
            "text": "The simulated samples may depend on one or many model parameters, for example the masses of hypothesized new particles such as foreseen by supersymmetry. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 8,
            "section_rank": 4
        },
        {
            "text": "It may be required, for instance when signals are analyzed over a multi-dimensional space of model parameters, to sample from a \"grid\" of potential signal scenarios, with each point on that grid corresponding to a unique point in the multidimensional parameter space. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 8,
            "section_rank": 4
        },
        {
            "text": "If no excess is observed in the data, exclusion limits may be set within this grid, excluding a subset of the tested parameter values.",
            "section": "Data analysis strategy",
            "paragraph_rank": 8,
            "section_rank": 4
        },
        {
            "text": "HistFitter configures and builds parametric models to describe the observed data, and provides tools to interpret the data in terms of these models. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 9,
            "section_rank": 4
        },
        {
            "text": "It uses the concepts of control, validation, and signal regions in the construction and handling of these models. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 9,
            "section_rank": 4
        },
        {
            "text": "A key innovation of HistFitter is to weave these concepts into its very fabric, and to treat them with statistically rigorous methods. ",
            "section": "Data analysis strategy",
            "paragraph_rank": 9,
            "section_rank": 4
        },
        {
            "text": "The technical implementation of HistFitter is detailed in the following sections, where The extrapolation from the control to the signal regions is verified in the validation regions that lie in the extrapolation phase space we explain two key ideas in data analysis strategy that have helped shape HistFitter.",
            "section": "Data analysis strategy",
            "paragraph_rank": 9,
            "section_rank": 4
        },
        {
            "text": "Use of control, signal and validation regions",
            "section_rank": 5
        },
        {
            "text": "Any physics analysis aiming to study a specific phenomenon involves defining a region of phase space, obtained by applying selections to a set of kinematic observables, where a particular signal model predicts a significant excess of events over the predicted background level. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 10,
            "section_rank": 5
        },
        {
            "text": "Such a signal enriched region is called a signal region, or SR.",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 10,
            "section_rank": 5
        },
        {
            "text": "To estimate background processes contaminating the SR(s) in a semi-data-driven way, one typically defines control region(s), or CR(s), in which the dominant background(s) can be controlled by comparison to the data samples. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 11,
            "section_rank": 5
        },
        {
            "text": "CRs are specifically designed to have a high purity for one type of background, and should be free of signal contamination.",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 11,
            "section_rank": 5
        },
        {
            "text": "A third important component of data analysis is the validation of the model used to predict the number of background events in the SR(s). ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 12,
            "section_rank": 5
        },
        {
            "text": "Validation region(s), VR(s), are defined for this purpose. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 12,
            "section_rank": 5
        },
        {
            "text": "VR(s) are typically placed in between the CR(s) and SR(s) in terms of selection criteria on the main kinematic observable(s) of the analysis. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 12,
            "section_rank": 5
        },
        {
            "text": "Hence, the choice of VR(s) is typically a trade-off between maximizing the statistical significance of the expected analysis result and minimizing signal contamination, while controlling the assumptions in the extrapolation from CR(s) to SR(s).",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 12,
            "section_rank": 5
        },
        {
            "text": "The concept of extrapolation between CRs, VRs and SRs is schematically shown in Fig. 1. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 13,
            "section_rank": 5,
            "ref_spans": [
                {
                    "start": 80,
                    "end": 86,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "Fig. 1"
                }
            ]
        },
        {
            "text": "Any such region can have one or many sub-regions, as illustrated by the dashed lines, where each sub-region is a histogram bin counting the number of events. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 13,
            "section_rank": 5
        },
        {
            "text": "The extrapolation happens in observables chosen to separate the regions, as discussed in Sect. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 13,
            "section_rank": 5
        },
        {
            "text": "2.2, and shown by the arrows on the figure.",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 13,
            "section_rank": 5
        },
        {
            "text": "To extract accurate and quantitative information from the data, particle physicists frequently use a Probability Density Function (PDF) whose parameters are adjusted with a fitting procedure. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 14,
            "section_rank": 5
        },
        {
            "text": "The fit to data is based on statistically independent CRs and SRs, which ensures that they can be modeled by separate PDFs and combined into a simultaneous fit. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 14,
            "section_rank": 5
        },
        {
            "text": "A crucial point of the HistFitter analysis strategy is the sharing of PDF parameters in all regions: CRs, SRs and VRs. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 14,
            "section_rank": 5
        },
        {
            "text": "This procedure enables the use of information from each signal and background component, as well as systematics uncertainties, consistently in all regions.",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 14,
            "section_rank": 5
        },
        {
            "text": "The analysis strategy flow is schematically shown in Fig. 2. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 15,
            "section_rank": 5,
            "ref_spans": [
                {
                    "start": 53,
                    "end": 59,
                    "type": "figure",
                    "ref_id": "fig_1",
                    "text": "Fig. 2"
                }
            ]
        },
        {
            "text": "If the dominant background processes are estimated with Monte Carlo (MC) simulations, their initial predictions are scaled to the observed event levels in the corresponding CRs, using normalization factors computed in the fit to data. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 15,
            "section_rank": 5
        },
        {
            "text": "Details on this fit follow in Sect. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 15,
            "section_rank": 5
        },
        {
            "text": "5. ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 15,
            "section_rank": 5
        },
        {
            "text": "Each such background sample has a single normalization factor, so the background predictions are scaled coherently in all regions, notably the SR(s). ",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 15,
            "section_rank": 5
        },
        {
            "text": "This results in so-called \"normalized background predictions\", which are used to extrapolate into the VRs and SRs, as discussed in the next sub-section.",
            "section": "Use of control, signal and validation regions",
            "paragraph_rank": 15,
            "section_rank": 5
        },
        {
            "text": "Extrapolation and transfer factors",
            "section_rank": 6
        },
        {
            "text": "An underlying assumption has been made in the previous sections, that the kinematic variables are well modeled after fitting the PDF to the data, such that the extrapolation from CR(s) to SR(s) is valid. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 16,
            "section_rank": 6
        },
        {
            "text": "Once the dominant background processes have been normalized in the CR(s), the corresponding modifications to the PDF can be extrapolated to the VR(s), which is (are) then used to verify the validity of this assumption. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 16,
            "section_rank": 6
        },
        {
            "text": "In HistFitter, the PDF is coherently defined in all the CRs, SRs and VRs simultaneously, even though the VRs are never used as a constraint in the fit. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 16,
            "section_rank": 6
        },
        {
            "text": "This allows for a correct statistical extrapolation to the SRs and VRs, including any correlations between the fit parameters. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 16,
            "section_rank": 6
        },
        {
            "text": "Technical details on the extrapolation technique used in HistFitter are given in Sect. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 16,
            "section_rank": 6
        },
        {
            "text": "5.2.",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 16,
            "section_rank": 6
        },
        {
            "text": "Once a satisfactory agreement is found between normalized background predictions and observed data in the VRs, the background predictions are further extrapolated to the SR(s), and, by convention, are only then compared with the observed data (see Fig. 2); a process generally called \"unblinding\" or \"opening the box\". ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 17,
            "section_rank": 6,
            "ref_spans": [
                {
                    "start": 248,
                    "end": 254,
                    "type": "figure",
                    "ref_id": "fig_1",
                    "text": "Fig. 2"
                }
            ]
        },
        {
            "text": "This ordering, of first validating the performance of the extrapolations, and, in a wider physics context, to get confidence in the methods used, avoids analyzers from using premature SR predictions, and thus potentially biasing the physics results.",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 17,
            "section_rank": 6
        },
        {
            "text": "A key underlying concept of the fitting procedure is the implicit use of ratios of expected event counts, called transfer factors, or TFs, for each simulated background process between each SR and CR. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 18,
            "section_rank": 6
        },
        {
            "text": "The normalized background pre- ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 18,
            "section_rank": 6
        },
        {
            "text": "where N p (CR, est.) (N p (SR, est.)) is the CR (SR) background estimate for each simulated physics processes p considered in the analysis, MC p (CR, init.) (MC p (SR, init.)) is the initial estimate as obtained from the MC simulation, and \u03bc p is the normalization factor as obtained in the fit to data. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 19,
            "section_rank": 6
        },
        {
            "text": "In the fit, the background estimate(s) is (are) typically driven by the statistics in the CR(s). ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 19,
            "section_rank": 6
        },
        {
            "text": "Define N p (CR, fit) as the fitted number of events for process p in the CR. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 19,
            "section_rank": 6
        },
        {
            "text": "Then equivalently:",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 19,
            "section_rank": 6
        },
        {
            "text": "The ratio appearing in the square brackets of Eq. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "2 is defined as the transfer factor TF. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "The two notation are equivalent in terms of the fit: there is a normalization quantity, derived from the fit to data, multiplied by a fixed constant. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "In other words, albeit the fit uses Eq. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "1 internally, N p (SR, est.) can always be interpreted as a TF multiplied by the fitted number of background events in the CR. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "An important feature of the TF approach is that systematic uncertainties on the predicted background processes can be (partially) canceled in the extrapolation; a virtue of the ratio of MC estimates. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "The total uncertainty on the number of background events in the SR is then a combination of the statistical uncertainties in the CR(s) and the residual systematic uncertainties of the extrapolation. ",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "For this reason, CRs are sometimes defined by somewhat loose selection criteria, in order to increase CR data event statistics without significantly increasing residual uncertainties in the TFs, which in turn reduces the extrapolation uncertainties to the SR.",
            "section": "Extrapolation and transfer factors",
            "paragraph_rank": 20,
            "section_rank": 6
        },
        {
            "text": "HistFitter software framework",
            "section_rank": 7,
            "entity_spans": [
                {
                    "start": 11,
                    "end": 19,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w5"
                }
            ]
        },
        {
            "text": "HistFitter provides a programmable framework to build and test a set of data models. ",
            "section": "HistFitter software framework",
            "paragraph_rank": 21,
            "section_rank": 7
        },
        {
            "text": "To do so, HistFitter takes a userdefined configuration as input, together with MC simulation samples and the observed data. ",
            "section": "HistFitter software framework",
            "paragraph_rank": 21,
            "section_rank": 7
        },
        {
            "text": "The HistFitter processing sequence then consists of three steps, illustrated by Fig. 3. ",
            "section": "HistFitter software framework",
            "paragraph_rank": 21,
            "section_rank": 7,
            "ref_spans": [
                {
                    "start": 80,
                    "end": 86,
                    "type": "figure",
                    "text": "Fig. 3"
                }
            ]
        },
        {
            "text": "From left to right:",
            "section": "HistFitter software framework",
            "paragraph_rank": 21,
            "section_rank": 7
        },
        {
            "text": "1. Based on the user-defined configuration, HistFitter automatically prepares initial histograms, using ROOT, from the provided input source(s) that model the physics processes in the data. ",
            "section": "HistFitter software framework",
            "paragraph_rank": 22,
            "section_rank": 7,
            "entity_spans": [
                {
                    "start": 104,
                    "end": 108,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w6"
                }
            ]
        },
        {
            "text": "(The user-defined configuration and histogram creation is discussed further below and in Sect. 4.) ",
            "section": "HistFitter software framework",
            "paragraph_rank": 22,
            "section_rank": 7
        },
        {
            "text": "2. According to each specified configuration, e.g. including or excluding the VR(s), the generated histograms are combined by HistFactory to construct a corresponding PDF. ",
            "section": "HistFitter software framework",
            "paragraph_rank": 22,
            "section_rank": 7
        },
        {
            "text": "At the end of this process, each PDF is stored together with the observed dataset. ",
            "section": "HistFitter software framework",
            "paragraph_rank": 22,
            "section_rank": 7
        },
        {
            "text": "3. The constructed PDFs are used to perform fits of the data with RooFit, perform statistical test with RooStats, and to produce plots and tables.",
            "section": "HistFitter software framework",
            "paragraph_rank": 22,
            "section_rank": 7
        },
        {
            "text": "These steps all require a substantial bookkeeping and configuration machinery, which is provided by HistFitter. ",
            "section": "HistFitter software framework",
            "paragraph_rank": 23,
            "section_rank": 7
        },
        {
            "text": "The following sub-sections summarize the central HistFitter configuration and the prominent features of the HistFactory and RooStats software tools that HistFitter utilizes.",
            "section": "HistFitter software framework",
            "paragraph_rank": 23,
            "section_rank": 7,
            "entity_spans": [
                {
                    "start": 133,
                    "end": 141,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w7"
                }
            ]
        },
        {
            "text": "Configuration and steering",
            "section_rank": 8
        },
        {
            "text": "The various steps of Fig. 3  histograms that describe the data. ",
            "section": "Configuration and steering",
            "paragraph_rank": 24,
            "section_rank": 8,
            "ref_spans": [
                {
                    "start": 21,
                    "end": 27,
                    "type": "figure",
                    "text": "Fig. 3"
                }
            ]
        },
        {
            "text": "Whereas, when moving to later stages in an analysis, allowing one to go straight to e.g. the statistical significance determination of the analysis result can have quite a beneficial impact. ",
            "section": "Configuration and steering",
            "paragraph_rank": 24,
            "section_rank": 8
        },
        {
            "text": "One of the key benefits of having a single configuration is to aid collaboration between the various members of an analysis group. ",
            "section": "Configuration and steering",
            "paragraph_rank": 24,
            "section_rank": 8
        },
        {
            "text": "The ability to rerun an analysis reasonably quickly, as long as the histograms have been created, helps tremendously in sharing workload between a collaboration, as does having the statistical tools easily accessible to the various members of an analysis group. ",
            "section": "Configuration and steering",
            "paragraph_rank": 24,
            "section_rank": 8
        },
        {
            "text": "Likewise, the process of combining existing analyses is made more efficient than if each group has to submit histograms independently to some third party for a statistical combination.",
            "section": "Configuration and steering",
            "paragraph_rank": 24,
            "section_rank": 8
        },
        {
            "text": "The central HistFitter configuration and bookkeeping machinery is built around a configuration manager. ",
            "section": "Configuration and steering",
            "paragraph_rank": 25,
            "section_rank": 8
        },
        {
            "text": "When executing HistFitter, users interact with the configuration manager to define a number of so-called fit configurations. ",
            "section": "Configuration and steering",
            "paragraph_rank": 25,
            "section_rank": 8
        },
        {
            "text": "(The technical implementations of these objects are described in Sect. 4.) ",
            "section": "Configuration and steering",
            "paragraph_rank": 25,
            "section_rank": 8
        },
        {
            "text": "A fit configuration describes the configuration of all processing steps of Fig. 3: it contains a PDF describing the CR, SR and VR data belonging to that fit configuration, together with meta-data required for the sequence of building, fitting, visualizing and interpreting each configuration, including the generation of all relevant input histograms.",
            "section": "Configuration and steering",
            "paragraph_rank": 25,
            "section_rank": 8,
            "ref_spans": [
                {
                    "start": 75,
                    "end": 81,
                    "type": "figure",
                    "text": "Fig. 3"
                }
            ]
        },
        {
            "text": "The construction of each data model typically requires the preparation of tens to hundreds of histograms. ",
            "section": "Configuration and steering",
            "paragraph_rank": 26,
            "section_rank": 8
        },
        {
            "text": "This can lead to memory exhaustion problems for long lists of models. ",
            "section": "Configuration and steering",
            "paragraph_rank": 26,
            "section_rank": 8
        },
        {
            "text": "However, while signal samples tend to be unique to each model, the background samples are often identical in most of the models. ",
            "section": "Configuration and steering",
            "paragraph_rank": 26,
            "section_rank": 8
        },
        {
            "text": "When preparing input histograms for each sample of each model, the configuration manager stores unique auto-generated names in a dictionary. ",
            "section": "Configuration and steering",
            "paragraph_rank": 26,
            "section_rank": 8
        },
        {
            "text": "The dictionary is used in turn to identify and re-use the histograms that can be shared between independent data models (see Fig. 3), which significantly reduces the memory usage of the software. ",
            "section": "Configuration and steering",
            "paragraph_rank": 26,
            "section_rank": 8,
            "ref_spans": [
                {
                    "start": 125,
                    "end": 131,
                    "type": "figure",
                    "text": "Fig. 3"
                }
            ],
            "entity_spans": [
                {
                    "start": 186,
                    "end": 194,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w8"
                }
            ]
        },
        {
            "text": "Additionally, the generated histograms are stored in an external file, allowing them to be directly loaded when rerunning HistFitter in the same configuration. ",
            "section": "Configuration and steering",
            "paragraph_rank": 26,
            "section_rank": 8
        },
        {
            "text": "This avoids the need for their, usually time-consuming, regeneration, and helps in sharing workload between a collaboration.",
            "section": "Configuration and steering",
            "paragraph_rank": 26,
            "section_rank": 8
        },
        {
            "text": "HistFactory",
            "section_rank": 9
        },
        {
            "text": "HistFitter uses the HistFactory package to construct a parametric model 2 describing the data, based on provided input histograms. ",
            "section": "HistFactory",
            "paragraph_rank": 27,
            "section_rank": 9,
            "entity_spans": [
                {
                    "start": 32,
                    "end": 39,
                    "type": "software",
                    "rawForm": "package",
                    "resp": "whitelist",
                    "id": "software-simple-w9"
                }
            ]
        },
        {
            "text": "This parametric model describes the nominal, i.e. preferred, prediction together with associated systematic variations of multiple signal and background processes in multiple regions, up to nearly arbitrary complexity. ",
            "section": "HistFactory",
            "paragraph_rank": 27,
            "section_rank": 9
        },
        {
            "text": "The input histograms can be generated by HistFitter, or can be provided externally by users.",
            "section": "HistFactory",
            "paragraph_rank": 27,
            "section_rank": 9
        },
        {
            "text": "As detailed in Ref. ",
            "section": "HistFactory",
            "paragraph_rank": 28,
            "section_rank": 9
        },
        {
            "text": "[23], the PDF constructed by HistFactory contains the parameter(s) of interest, such as the rate of a signal process, the normalization factors for background processes (as estimated from the data), and the so-called nuisance parameters that model the impact of systematic uncertainties. ",
            "section": "HistFactory",
            "paragraph_rank": 28,
            "section_rank": 9,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b20",
                    "text": "[23]"
                }
            ]
        },
        {
            "text": "Each systematic uncertainty i is described with a nui-sance parameter, \u03b8 i , that continuously interpolates between the nominal and (systematic uncertainty) variation templates, e.g. \u03b8 i = \u00b11 for \u00b11\u03c3 variations of the systematic uncertainty, and \u03b8 i = 0 for the nominal template, where 1\u03c3 means one standard deviation.",
            "section": "HistFactory",
            "paragraph_rank": 28,
            "section_rank": 9
        },
        {
            "text": "The general likelihood L of the event-counting analyses considered here is the product of Poisson distributions of event counts in the SR(s) and/or CR(s) and of additional distributions that implement the constraints on systematic uncertainties. ",
            "section": "HistFactory",
            "paragraph_rank": 29,
            "section_rank": 9
        },
        {
            "text": "It can be written as:",
            "section": "HistFactory",
            "paragraph_rank": 29,
            "section_rank": 9
        },
        {
            "text": "The first two factors of Eq. ",
            "section": "HistFactory",
            "paragraph_rank": 30,
            "section_rank": 9
        },
        {
            "text": "3 (P SR and P CR ) reflect the Poisson distributions, P, of n i , which is the number of observed events in each signal and control region bin i. ",
            "section": "HistFactory",
            "paragraph_rank": 30,
            "section_rank": 9
        },
        {
            "text": "The Poisson expectations \u03bb i are functions depending on the predictions for the signal and various background sources p, the nuisance parameters that parametrize systematic uncertainties, \u03b8 , the normalization factors for background processes, \u03bc p , and also the signal strength parameter \u03bc sig . ",
            "section": "HistFactory",
            "paragraph_rank": 30,
            "section_rank": 9
        },
        {
            "text": "(\u03bc p is the same parameter as in Eq. 1.) ",
            "section": "HistFactory",
            "paragraph_rank": 30,
            "section_rank": 9
        },
        {
            "text": "For \u03bc sig = 0 the signal component is turned off, and for \u03bc sig = 1 the signal expectation equals the nominal value of the model under consideration. ",
            "section": "HistFactory",
            "paragraph_rank": 30,
            "section_rank": 9
        },
        {
            "text": "The predictions for signal and background sources are forced to be positive in HistFactory for any values of the nuisance parameters and in any histogram bin.",
            "section": "HistFactory",
            "paragraph_rank": 30,
            "section_rank": 9
        },
        {
            "text": "Systematic uncertainties are included using the probability density function C syst (\u03b8 0 , \u03b8 ), where \u03b8 0 are the central values of the auxiliary measurements around which \u03b8 can be varied, for example when maximizing the likelihood. ",
            "section": "HistFactory",
            "paragraph_rank": 31,
            "section_rank": 9
        },
        {
            "text": "The impact of changes in nuisance parameters on the expectation values are described completely by the functions predicting the amount of signal and background, \u03bb S and \u03bb i . ",
            "section": "HistFactory",
            "paragraph_rank": 31,
            "section_rank": 9
        },
        {
            "text": "For independent nuisance parameters, C syst is simply a product of the probability distributions corresponding to the auxiliary measurements describing each of the systematic uncertainties, typically Gaussians G with unit width,",
            "section": "HistFactory",
            "paragraph_rank": 31,
            "section_rank": 9
        },
        {
            "text": "where S is the full set of systematic uncertainties considered. ",
            "section": "HistFactory",
            "paragraph_rank": 32,
            "section_rank": 9
        },
        {
            "text": "The auxiliary measurements \u03b8 0 j are typically fixed to zero, but can be varied when generating pseudo experiments (see below).",
            "section": "HistFactory",
            "paragraph_rank": 32,
            "section_rank": 9
        },
        {
            "text": "Several interpolation (and extrapolation) algorithms are employed in HistFactory to describe the PDF for all values of nuisance parameters \u03b8 j . ",
            "section": "HistFactory",
            "paragraph_rank": 33,
            "section_rank": 9
        },
        {
            "text": "For a complete overview the reader is referred to Ref. ",
            "section": "HistFactory",
            "paragraph_rank": 33,
            "section_rank": 9
        },
        {
            "text": "[23].",
            "section": "HistFactory",
            "paragraph_rank": 33,
            "section_rank": 9,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b20",
                    "text": "[23]"
                }
            ]
        },
        {
            "text": "The execution of HistFactory results in a a persistable RooFit object containing the parametrized PDF, the dataset, and a helper object summarizing the model configuration (used for the statistical interpretation). ",
            "section": "HistFactory",
            "paragraph_rank": 34,
            "section_rank": 9
        },
        {
            "text": "These are used as input to perform statistical tests with the RooStats package, as discussed in the next sub-section.",
            "section": "HistFactory",
            "paragraph_rank": 34,
            "section_rank": 9,
            "entity_spans": [
                {
                    "start": 71,
                    "end": 78,
                    "type": "software",
                    "rawForm": "package",
                    "resp": "whitelist",
                    "id": "software-simple-w10"
                }
            ]
        },
        {
            "text": "RooStats",
            "section_rank": 10
        },
        {
            "text": "HistFitter is capable of performing a list of pre-configured statistical tests to one or several dataset(s) from a single command-line call. ",
            "section": "RooStats",
            "paragraph_rank": 35,
            "section_rank": 10
        },
        {
            "text": "To do so, it interfaces with the RooStats package. ",
            "section": "RooStats",
            "paragraph_rank": 35,
            "section_rank": 10,
            "entity_spans": [
                {
                    "start": 42,
                    "end": 49,
                    "type": "software",
                    "rawForm": "package",
                    "resp": "whitelist",
                    "id": "software-simple-w11"
                }
            ]
        },
        {
            "text": "These tests are:",
            "section": "RooStats",
            "paragraph_rank": 35,
            "section_rank": 10
        },
        {
            "text": "1. hypothesis tests of signal models; ",
            "section": "RooStats",
            "paragraph_rank": 36,
            "section_rank": 10
        },
        {
            "text": "2. the construction of expected and observed confidence intervals on model parameters. ",
            "section": "RooStats",
            "paragraph_rank": 36,
            "section_rank": 10
        },
        {
            "text": "For example, the 95 % confidence level upper limit on the rate of a signal process; ",
            "section": "RooStats",
            "paragraph_rank": 36,
            "section_rank": 10
        },
        {
            "text": "3. the significance determination of a potentially excess of observed over expected events in a signal region.",
            "section": "RooStats",
            "paragraph_rank": 36,
            "section_rank": 10
        },
        {
            "text": "A suite of statistical calculations can be performed, as configured by the user, ranging from Bayesian to Frequentist philosophies and using various test statistic quantities as input. ",
            "section": "RooStats",
            "paragraph_rank": 37,
            "section_rank": 10
        },
        {
            "text": "3 By default, HistFitter employs a Frequentist method to perform hypothesis tests and uses the profile likelihood ratio q \u03bc sig as test statistic. ",
            "section": "RooStats",
            "paragraph_rank": 37,
            "section_rank": 10,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b1",
                    "text": "3"
                }
            ]
        },
        {
            "text": "The CLs method [28] is used to test the exclusion of new physics hypothesis. ",
            "section": "RooStats",
            "paragraph_rank": 37,
            "section_rank": 10,
            "ref_spans": [
                {
                    "start": 15,
                    "end": 19,
                    "type": "bibr",
                    "ref_id": "b25",
                    "text": "[28]"
                }
            ]
        },
        {
            "text": "Whenever appropriate, this method is approximated by asymptotic formulae [29] to speed up the evaluation process.",
            "section": "RooStats",
            "paragraph_rank": 37,
            "section_rank": 10,
            "ref_spans": [
                {
                    "start": 73,
                    "end": 77,
                    "type": "bibr",
                    "ref_id": "b26",
                    "text": "[29]"
                }
            ]
        },
        {
            "text": "More details about how hypothesis tests are performed with HistFitter are given in Sect. ",
            "section": "RooStats",
            "paragraph_rank": 38,
            "section_rank": 10
        },
        {
            "text": "7.",
            "section": "RooStats",
            "paragraph_rank": 38,
            "section_rank": 10
        },
        {
            "text": "Programming of probability density functions",
            "section_rank": 11
        },
        {
            "text": "HistFitter is designed to build and manipulate PDFs of nearly arbitrary complexity.",
            "section": "Programming of probability density functions",
            "paragraph_rank": 39,
            "section_rank": 11
        },
        {
            "text": "In the terminology of HistFactory, the likelihood function in Eq. ",
            "section": "Programming of probability density functions",
            "paragraph_rank": 40,
            "section_rank": 11
        },
        {
            "text": "3 has multiple channels, which need inputs in the form of samples, corresponding to the signal and back-  ground processes for that region. ",
            "section": "Programming of probability density functions",
            "paragraph_rank": 40,
            "section_rank": 11
        },
        {
            "text": "In turn, the various samples have systematic uncertainties, or systematics. ",
            "section": "Programming of probability density functions",
            "paragraph_rank": 40,
            "section_rank": 11
        },
        {
            "text": "A Hist-Factory \"channel\" is a synonym for a \"region\", generically referring to either CR, SR or VR in this section. ",
            "section": "Programming of probability density functions",
            "paragraph_rank": 40,
            "section_rank": 11
        },
        {
            "text": "The systematic uncertainties can be either statistical, theoretical or experimental in nature. ",
            "section": "Programming of probability density functions",
            "paragraph_rank": 40,
            "section_rank": 11
        },
        {
            "text": "These HistFactory C++ classes are mirrored (overloaded) by HistFitter in Python, and extended by adding the flexibility to construct multiple PDFs from these building blocks in a programmable way.",
            "section": "Programming of probability density functions",
            "paragraph_rank": 40,
            "section_rank": 11,
            "entity_spans": [
                {
                    "start": 73,
                    "end": 79,
                    "type": "software",
                    "rawForm": "Python",
                    "resp": "whitelist",
                    "id": "software-simple-w12"
                }
            ]
        },
        {
            "text": "The technical components to do this are discussed in this section, which follows a top-to-bottom description of the classes illustrated in Figs. ",
            "section": "Programming of probability density functions",
            "paragraph_rank": 41,
            "section_rank": 11
        },
        {
            "text": "4 and 5.",
            "section": "Programming of probability density functions",
            "paragraph_rank": 41,
            "section_rank": 11
        },
        {
            "text": "The configuration manager",
            "section_rank": 12
        },
        {
            "text": "The HistFitter configuration and bookkeeping machinery is built around a central configuration manager, config Manager, implemented by two singleton objects: one in Python and one in C++. ",
            "section": "The configuration manager",
            "paragraph_rank": 42,
            "section_rank": 12,
            "entity_spans": [
                {
                    "start": 111,
                    "end": 118,
                    "type": "software",
                    "rawForm": "Manager",
                    "resp": "whitelist",
                    "id": "software-simple-w13"
                },
                {
                    "start": 165,
                    "end": 171,
                    "type": "software",
                    "rawForm": "Python",
                    "resp": "whitelist",
                    "id": "software-simple-w14"
                }
            ]
        },
        {
            "text": "When executing HistFitter, users interact with the Python interface of the configManager to define, for each data model, a fitConfig object, describing the fit configuration.",
            "section": "The configuration manager",
            "paragraph_rank": 42,
            "section_rank": 12,
            "entity_spans": [
                {
                    "start": 51,
                    "end": 57,
                    "type": "software",
                    "rawForm": "Python",
                    "resp": "whitelist",
                    "id": "software-simple-w15"
                }
            ]
        },
        {
            "text": "The fitConfig class configures each processing step of Fig. 3; it is described below in Sect. ",
            "section": "The configuration manager",
            "paragraph_rank": 43,
            "section_rank": 12,
            "ref_spans": [
                {
                    "start": 55,
                    "end": 61,
                    "type": "figure",
                    "text": "Fig. 3"
                }
            ]
        },
        {
            "text": "4.2. ",
            "section": "The configuration manager",
            "paragraph_rank": 43,
            "section_rank": 12
        },
        {
            "text": "The configuration manager can hold any number of fitConfig objects.",
            "section": "The configuration manager",
            "paragraph_rank": 43,
            "section_rank": 12
        },
        {
            "text": "In terms of design patterns, the configManager can be seen as a \"factory of factories\", since it generates the fitConfig objects that are themselves factories of PDF objects. ",
            "section": "The configuration manager",
            "paragraph_rank": 44,
            "section_rank": 12
        },
        {
            "text": "By producing a list of data models, HistFitter thus introduces an additional level of abstraction which allows hypothesis tests to be performed over sets of signal models.",
            "section": "The configuration manager",
            "paragraph_rank": 44,
            "section_rank": 12
        },
        {
            "text": "The fit configuration",
            "section_rank": 13
        },
        {
            "text": "HistFitter uses the fitConfig class to construct its PDFs. ",
            "section": "The fit configuration",
            "paragraph_rank": 45,
            "section_rank": 13
        },
        {
            "text": "The design of this class allows for the creation of highly complex PDFs, describing highly non-trivial analysis setups, with only a few lines of intuitive code. ",
            "section": "The fit configuration",
            "paragraph_rank": 45,
            "section_rank": 13
        },
        {
            "text": "This is configured by users as follows:",
            "section": "The fit configuration",
            "paragraph_rank": 45,
            "section_rank": 13
        },
        {
            "text": "from configManager import configMgr myFitConfig = configMgr.addFitConfig(\"myAnalysisName\")",
            "section": "The fit configuration",
            "paragraph_rank": 46,
            "section_rank": 13
        },
        {
            "text": "where myFitConfig is a reference to a new fitConfig object owned by the configManager. ",
            "section": "The fit configuration",
            "paragraph_rank": 47,
            "section_rank": 13
        },
        {
            "text": "The fitConfig class logically corresponds to a PDF decorated with metadata about the properties of the contained channels (CR, SR, VR), including visualization, fitting and interpretation options.",
            "section": "The fit configuration",
            "paragraph_rank": 47,
            "section_rank": 13
        },
        {
            "text": "During configuration, instances of channels, samples and systematics are put together by fitConfig objects, together with links to the corresponding input histograms. ",
            "section": "The fit configuration",
            "paragraph_rank": 48,
            "section_rank": 13
        },
        {
            "text": "During execution, the fitConfig information is used to steer the Hist-Factory package's creation of a RooSimultaneous object modelling the actual PDF with RooFit. ",
            "section": "The fit configuration",
            "paragraph_rank": 48,
            "section_rank": 13,
            "entity_spans": [
                {
                    "start": 78,
                    "end": 85,
                    "type": "software",
                    "rawForm": "package",
                    "resp": "whitelist",
                    "id": "software-simple-w16"
                }
            ]
        },
        {
            "text": "Figure 4 illustrates the modular design of a typical HistFitter fit configuration. ",
            "section": "The fit configuration",
            "paragraph_rank": 48,
            "section_rank": 13,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 8,
                    "type": "figure",
                    "text": "Figure 4"
                }
            ]
        },
        {
            "text": "The user interface provides the methods addChannel(), addSample() and addSystematic () to build up data models in an intuitive manner. ",
            "section": "The fit configuration",
            "paragraph_rank": 48,
            "section_rank": 13
        },
        {
            "text": "For instance, samples and systematics can be efficiently added to multiple channels through a \"trickle-down\" mechanism, as illustrated by Fig. 5. ",
            "section": "The fit configuration",
            "paragraph_rank": 48,
            "section_rank": 13,
            "ref_spans": [
                {
                    "start": 138,
                    "end": 144,
                    "type": "figure",
                    "text": "Fig. 5"
                }
            ]
        },
        {
            "text": "This means that fitConfig.addSample () adds a sample to all the channels owned by the fitConfig, while channel.addSample() adds a sample to one specific channel. ",
            "section": "The fit configuration",
            "paragraph_rank": 48,
            "section_rank": 13
        },
        {
            "text": "Similarly, sample.addSystematic() only adds a systematic to one specific sample while channel.addSystematic() adds a systematic to all the samples owned by the channel and fitConfig.add Systematic() adds a systematic to all the samples of all the channels owned by the fitConfig.",
            "section": "The fit configuration",
            "paragraph_rank": 48,
            "section_rank": 13
        },
        {
            "text": "Since different channels often share the same samples (i.e., processes), and different samples often share the correlated systematic uncertainties, the trickle-down mechanism is in fact an extremely useful feature. ",
            "section": "The fit configuration",
            "paragraph_rank": 49,
            "section_rank": 13
        },
        {
            "text": "This ensures that complex configurations of PDFs can often be described with only a few lines of code. ",
            "section": "The fit configuration",
            "paragraph_rank": 49,
            "section_rank": 13
        },
        {
            "text": "As illustrated in Fig. 5, one simply adds all channels, samples, and systematic uncertainties directly to the fitConfig object and lets these \"trickle down\", thereby automatically creating a highly advanced fit configuration.",
            "section": "The fit configuration",
            "paragraph_rank": 49,
            "section_rank": 13,
            "ref_spans": [
                {
                    "start": 18,
                    "end": 24,
                    "type": "figure",
                    "text": "Fig. 5"
                }
            ]
        },
        {
            "text": "A basic fit configuration can also be conveniently cloned and extended to specify new configurations, a feature which is frequently used to build data models corresponding to multiple signal hypotheses from a common background description.",
            "section": "The fit configuration",
            "paragraph_rank": 50,
            "section_rank": 13
        },
        {
            "text": "Channels",
            "section_rank": 14
        },
        {
            "text": "The Channel objects contain data from a region of phase space defined by event selection criteria on the input dataset. ",
            "section": "Channels",
            "paragraph_rank": 51,
            "section_rank": 14,
            "entity_spans": [
                {
                    "start": 4,
                    "end": 11,
                    "type": "software",
                    "rawForm": "Channel",
                    "resp": "whitelist",
                    "id": "software-simple-w17"
                }
            ]
        },
        {
            "text": "Channels can represent either a simple event count (i.e. one bin), or the multi-binned distribution of a physical observable. ",
            "section": "Channels",
            "paragraph_rank": 51,
            "section_rank": 14
        },
        {
            "text": "New binned and un-binned channels can be added to a fitConfig by calling: myChannel = myFitConfig.addChannel(\"myObs\",",
            "section": "Channels",
            "paragraph_rank": 51,
            "section_rank": 14
        },
        {
            "text": "[\"mySelection\"], nBins, varLow, varHigh) myUnbinnedChannel = myFitConfig.addChannel(\"cuts\",",
            "section": "Channels",
            "paragraph_rank": 52,
            "section_rank": 14
        },
        {
            "text": "[\"mySelection\"], 1, 0.5, 1.5)",
            "section": "Channels",
            "paragraph_rank": 53,
            "section_rank": 14
        },
        {
            "text": "where myObs is the name of an element of the input dataset, nBins, varLow and varHigh indicate the number of bins and the range of values as for a one-dimensional histogram, and mySelection specifies the selection criteria of the considered region. ",
            "section": "Channels",
            "paragraph_rank": 54,
            "section_rank": 14
        },
        {
            "text": "For un-binned channels, cuts is a reserved keyword indicating that only the total the number of events passing the selection criteria needs to be considered. ",
            "section": "Channels",
            "paragraph_rank": 54,
            "section_rank": 14
        },
        {
            "text": "4 A Channel object can represent a CR, SR or VR. ",
            "section": "Channels",
            "paragraph_rank": 54,
            "section_rank": 14,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b2",
                    "text": "4"
                }
            ],
            "entity_spans": [
                {
                    "start": 4,
                    "end": 11,
                    "type": "software",
                    "rawForm": "Channel",
                    "resp": "whitelist",
                    "id": "software-simple-w18"
                }
            ]
        },
        {
            "text": "This information is configured by users as follows:",
            "section": "Channels",
            "paragraph_rank": 54,
            "section_rank": 14
        },
        {
            "text": "myFitConfig.setBkgConstrainChannels(myChannel) myFitConfig.setValidationChannels(myChannel) myFitConfig.setSignalChannels(myChannel)",
            "section": "Channels",
            "paragraph_rank": 55,
            "section_rank": 14
        },
        {
            "text": "It is possible to add an arbitrary number of channels to a given fitConfig by simply calling addChannel() multiple times. ",
            "section": "Channels",
            "paragraph_rank": 56,
            "section_rank": 14
        },
        {
            "text": "Consequently, HistFitter automatically performs simultaneous fits constrained by the data of all BkgConstrainChannels (CR) and SignalChannels (SR), but not by the ValidationChannels (VR). ",
            "section": "Channels",
            "paragraph_rank": 56,
            "section_rank": 14
        },
        {
            "text": "The data itself is described by a list of Sample objects owned by each channel, as discussed in the next sub-section.",
            "section": "Channels",
            "paragraph_rank": 56,
            "section_rank": 14
        },
        {
            "text": "Samples",
            "section_rank": 15
        },
        {
            "text": "The Sample class logically corresponds to a component of a RooFit PDF decorated with HistFitter meta-data. ",
            "section": "Samples",
            "paragraph_rank": 57,
            "section_rank": 15
        },
        {
            "text": "In a typical particle physics analysis, each sample corresponds to a specific physics process and several samples are needed to model a complete dataset.",
            "section": "Samples",
            "paragraph_rank": 57,
            "section_rank": 15
        },
        {
            "text": "In HistFitter, samples can be defined in a specific channel or defined simultaneously in multiple channels. ",
            "section": "Samples",
            "paragraph_rank": 58,
            "section_rank": 15
        },
        {
            "text": "The Sample class also owns a list of objects representing its systematic uncertainties. ",
            "section": "Samples",
            "paragraph_rank": 58,
            "section_rank": 15
        },
        {
            "text": "Importantly, samples provide the link between input data and the respective components of the PDF. ",
            "section": "Samples",
            "paragraph_rank": 58,
            "section_rank": 15
        },
        {
            "text": "Three types of inputs are supported:",
            "section": "Samples",
            "paragraph_rank": 58,
            "section_rank": 15
        },
        {
            "text": "1. TTree: a ROOT data structure, stored in a TFile, in which a list of events is mapped to a list of key-value pairs characterizing the properties of each event; ",
            "section": "Samples",
            "paragraph_rank": 59,
            "section_rank": 15,
            "entity_spans": [
                {
                    "start": 12,
                    "end": 16,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w19"
                }
            ]
        },
        {
            "text": "2. Float: floating point numbers provided by users through the Python interface of HistFitter; ",
            "section": "Samples",
            "paragraph_rank": 59,
            "section_rank": 15,
            "entity_spans": [
                {
                    "start": 3,
                    "end": 8,
                    "type": "software",
                    "rawForm": "Float",
                    "resp": "whitelist",
                    "id": "software-simple-w20"
                },
                {
                    "start": 63,
                    "end": 69,
                    "type": "software",
                    "rawForm": "Python",
                    "resp": "whitelist",
                    "id": "software-simple-w21"
                }
            ]
        },
        {
            "text": "3. Histogram: pre-made histograms using the ROOT TH1 data structure, stored in an external TFile.",
            "section": "Samples",
            "paragraph_rank": 59,
            "section_rank": 15,
            "entity_spans": [
                {
                    "start": 44,
                    "end": 48,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w22"
                }
            ]
        },
        {
            "text": "The most commonly used type of input is TTree, which provides maximal flexibility and features but requires the largest amount of processing power and disk I/O. ",
            "section": "Samples",
            "paragraph_rank": 60,
            "section_rank": 15
        },
        {
            "text": "Float inputs tend to be used for quick tests and simple processes. ",
            "section": "Samples",
            "paragraph_rank": 60,
            "section_rank": 15,
            "entity_spans": [
                {
                    "start": 0,
                    "end": 5,
                    "type": "software",
                    "rawForm": "Float",
                    "resp": "whitelist",
                    "id": "software-simple-w23"
                }
            ]
        },
        {
            "text": "Histogram inputs can be used for compatibility with external frameworks, and also allow the user to conveniently skip the TTree-to-histogram processing when re-building PDFs. ",
            "section": "Samples",
            "paragraph_rank": 60,
            "section_rank": 15
        },
        {
            "text": "In all cases, the initial input is transformed into histograms as specified by Sample objects, before being saved to a temporary file and passed to HistFactory to build the RooFit PDFs (see Sect. ",
            "section": "Samples",
            "paragraph_rank": 60,
            "section_rank": 15
        },
        {
            "text": "4",
            "section": "Samples",
            "paragraph_rank": 60,
            "section_rank": 15,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b2",
                    "text": "4"
                }
            ]
        },
        {
            "text": ".2).",
            "section_rank": 16
        },
        {
            "text": "A basic sample can be created and configured by users as follows: mySample = Sample(\"SampleName\",myColor) myChannel.addSample(mySample) which constructs a sample object owned by myChannel and displayed with myColor color by the visualization tools. ",
            "section": ".2).",
            "paragraph_rank": 61,
            "section_rank": 16
        },
        {
            "text": "In this example, HistFitter takes inputs from a TTree object named SampleName in the default ROOT file specified at the configManager level. ",
            "section": ".2).",
            "paragraph_rank": 61,
            "section_rank": 16,
            "entity_spans": [
                {
                    "start": 93,
                    "end": 97,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w24"
                }
            ]
        },
        {
            "text": "To construct the sample, HistFitter uses the event selection criteria of the parent channel and applies a default sample weight.",
            "section": ".2).",
            "paragraph_rank": 61,
            "section_rank": 16
        },
        {
            "text": "The default settings can be over-written by users to achieve specific goals. ",
            "section": ".2).",
            "paragraph_rank": 62,
            "section_rank": 16
        },
        {
            "text": "For instance, a sample can be built from Float input with:",
            "section": ".2).",
            "paragraph_rank": 62,
            "section_rank": 16,
            "entity_spans": [
                {
                    "start": 41,
                    "end": 46,
                    "type": "software",
                    "rawForm": "Float",
                    "resp": "whitelist",
                    "id": "software-simple-w25"
                }
            ]
        },
        {
            "text": "mySample.buildHisto([100,34,220], \"region\", \"observable\")",
            "section": ".2).",
            "paragraph_rank": 63,
            "section_rank": 16
        },
        {
            "text": "where the list [100,34,220] specifies the bin content of three bins in an histogram. ",
            "section": ".2).",
            "paragraph_rank": 64,
            "section_rank": 16
        },
        {
            "text": "The default sample weight and path to the input data can also be over-written as follows:",
            "section": ".2).",
            "paragraph_rank": 64,
            "section_rank": 16
        },
        {
            "text": "mySample.setWeight((\"weight1\",\"weight2\")) mySample.setFileList([\"File1.root\",\"File2.root\"]) mySample.setTreeName(\"ArbitraryName\") mySample.setHistoName(\"ArbitraryName\")",
            "section": ".2).",
            "paragraph_rank": 65,
            "section_rank": 16
        },
        {
            "text": "Weights are passed as a string to also allow the easy use of weights stored in a ROOT TTree. ",
            "section": ".2).",
            "paragraph_rank": 66,
            "section_rank": 16,
            "entity_spans": [
                {
                    "start": 81,
                    "end": 85,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w26"
                }
            ]
        },
        {
            "text": "In addition, the Sample class has optional methods to configure its corresponding RooFit PDF, such as:",
            "section": ".2).",
            "paragraph_rank": 66,
            "section_rank": 16
        },
        {
            "text": "mySample.setStatConfig(False) mySample.setNormFactor(\"my_Norm\", 1.0, 0.0, 10.0) resulting in the deactivation (activated by default) of builtin Poisson statistical uncertainties, and in the creation of a fit normalization factor my_Norm with initial value 1.0 and allowed range 0.0 to 10.0, respectively.",
            "section": ".2).",
            "paragraph_rank": 67,
            "section_rank": 16
        },
        {
            "text": "Last but not least, HistFitter provides many features for modeling the systematic uncertainties associated to each sample, as discussed in the next sub-section.",
            "section": ".2).",
            "paragraph_rank": 68,
            "section_rank": 16
        },
        {
            "text": "Systematic uncertainties",
            "section_rank": 17
        },
        {
            "text": "For each component of the PDF, a nominal distribution representing the best available prediction is typically provided to the physics analysis as a histogram owned by a Sample object. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 69,
            "section_rank": 17
        },
        {
            "text": "These components typically have systematic uncertainties whose impact gets quantified in dedicated studies. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 69,
            "section_rank": 17
        },
        {
            "text": "This is often modeled as variations of one standard deviation around the nominal prediction, provided to the physics analysis as sets of two additional histograms. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 69,
            "section_rank": 17
        },
        {
            "text": "These systematic uncertainties are parametrized in the PDF with nuisance parameters, as in Eq. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 69,
            "section_rank": 17
        },
        {
            "text": "3.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 69,
            "section_rank": 17
        },
        {
            "text": "In HistFitter, systematic uncertainties are implemented with a dedicated Systematic class with several options. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 70,
            "section_rank": 17
        },
        {
            "text": "In a typical analysis, several Systematic objects are built and owned by a parent Sample. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 70,
            "section_rank": 17
        },
        {
            "text": "Through the trickle down mechanism described in Sect. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 70,
            "section_rank": 17
        },
        {
            "text": "4, systematics can be defined for a specific sample or defined simultaneously for multiple samples and/or multiple channels.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 70,
            "section_rank": 17
        },
        {
            "text": "A Systematic object can be conceived as a doublet of samples specifying up and down variations around the parent Sample. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 71,
            "section_rank": 17
        },
        {
            "text": "Hence Systematic objects can be constructed from the same types of inputs as Samples, namely: TTree, Float and histogram.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 71,
            "section_rank": 17,
            "entity_spans": [
                {
                    "start": 101,
                    "end": 106,
                    "type": "software",
                    "rawForm": "Float",
                    "resp": "whitelist",
                    "id": "software-simple-w27"
                }
            ]
        },
        {
            "text": "When using TTree inputs, two methods can be used to compute the up/down variations of a systematic: weightbased or tree-based. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 72,
            "section_rank": 17
        },
        {
            "text": "In the weight-based method, histograms are always built from the same TTree, using three different sets of weights: up, nominal and down. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 72,
            "section_rank": 17
        },
        {
            "text": "In the tree-based method, histograms are built from three different TTrees using the same set of weights. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 72,
            "section_rank": 17
        },
        {
            "text": "If only one variation is available, users can either build a one-sided uncertainty or symmetrize the variation as nominal \u00b1 (up\u2212nominal) nominal . ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 72,
            "section_rank": 17
        },
        {
            "text": "Systematic objects can be created by users as follows: mySys = Systematic(\"myTreeSys\", \"ASample\", \"ASample_UP\", \"ASample_DOWN\", \"tree\", \"myMethods\") mySys = Systematic(\"myWeightSys\", [\"nominalWeights\"],",
            "section": "Systematic uncertainties",
            "paragraph_rank": 72,
            "section_rank": 17
        },
        {
            "text": "[\"upWeights\"], [\"downWeights\"], \"weight\", \"myMethods\") mySys = Systematic(\"myUserSys\", [\"nominalWeights\"], 1.1, 0.8, \"user\", \"myMethods\") As illustrated in Fig. 4, correlated systematic uncertainties are declared simply by giving them identical names in the corresponding Samples. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 73,
            "section_rank": 17,
            "ref_spans": [
                {
                    "start": 156,
                    "end": 162,
                    "type": "figure",
                    "text": "Fig. 4"
                }
            ]
        },
        {
            "text": "Otherwise they are treated as uncorrelated.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 73,
            "section_rank": 17
        },
        {
            "text": "When turning the above into nuisance parameters, additional input is required to specify the interpolation (extrapolation) algorithm and constraint parametrization for each systematic uncertainty. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 74,
            "section_rank": 17
        },
        {
            "text": "This is done with the argument myMethods above. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 74,
            "section_rank": 17
        },
        {
            "text": "Several possible analysis strategies can be envisaged, requiring a detailed discussion, case by case. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 74,
            "section_rank": 17
        },
        {
            "text": "To address this, HistFitter does not enforce a specific strategy but provides users with as many methods as possible to cover all reasonable possibilities.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 74,
            "section_rank": 17
        },
        {
            "text": "The basic methods for systematic uncertainties defined in HistFactory are called: overallSys, histoSys and shapeSys, and are listed in the top half of Table 1.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 75,
            "section_rank": 17,
            "ref_spans": [
                {
                    "start": 151,
                    "end": 158,
                    "type": "table",
                    "ref_id": "tab_2",
                    "text": "Table 1"
                }
            ]
        },
        {
            "text": "An overallSys describes an uncertainty of the global normalization of the sample. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 76,
            "section_rank": 17
        },
        {
            "text": "This method does not affect the shape of the distributions of the sample. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 76,
            "section_rank": 17
        },
        {
            "text": "A histoSys describes a correlated uncertainty of the shape and normalization. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 76,
            "section_rank": 17
        },
        {
            "text": "Both methods use a Gaussian constraint to model an uncertainty and allow for asymmetric uncertainties, sim-ply by providing asymmetric input values or histograms. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 76,
            "section_rank": 17
        },
        {
            "text": "By default they are configured to use a 6th-order polynomial interpolation technique between the \u00b11\u03c3 and nominal histograms and a linear extrapolation beyond |1\u03c3 | [23], though they can be configured differently.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 76,
            "section_rank": 17,
            "ref_spans": [
                {
                    "start": 164,
                    "end": 168,
                    "type": "bibr",
                    "ref_id": "b20",
                    "text": "[23]"
                }
            ]
        },
        {
            "text": "A shapeSys describes an uncertainty of statistical nature, typically arising from limited MC statistics. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 77,
            "section_rank": 17
        },
        {
            "text": "In Hist-Factory, shapeSys is modeled with an independent parameter for each bin of each channel. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 77,
            "section_rank": 17
        },
        {
            "text": "It is shared between all samples of that channel with StatConfig==True (see Sect. 4.3). ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 77,
            "section_rank": 17
        },
        {
            "text": "For simplicity, users can also set a threshold below which samples are neglected when building a shapeSys. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 77,
            "section_rank": 17
        },
        {
            "text": "The interpolation and extrapolation technique used for shapeSys are as for histoSys, and parametrized as a Poissonian constraint.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 77,
            "section_rank": 17
        },
        {
            "text": "To respond to various use cases encountered during reallife analysis of ATLAS Run-1 data, HistFitter provides additional systematic methods derived from the basic HistFactory methods. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 78,
            "section_rank": 17
        },
        {
            "text": "A sub-set of the systematic methods available in HistFitter is listed in the bottom half of Table 1.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 78,
            "section_rank": 17,
            "ref_spans": [
                {
                    "start": 92,
                    "end": 99,
                    "type": "table",
                    "ref_id": "tab_2",
                    "text": "Table 1"
                }
            ]
        },
        {
            "text": "These methods can be specified with combinations of the norm, OneSide and Sym keywords. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 79,
            "section_rank": 17
        },
        {
            "text": "The norm keyword indicates that the total event count is required to remain invariant in a user-specified list of normalization region(s) when constructing up/down variations. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 79,
            "section_rank": 17
        },
        {
            "text": "This describes uncertainties of the shape only. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 79,
            "section_rank": 17
        },
        {
            "text": "Such a systematic uncertainty is transformed from an uncertainty on event counts in each region into a systematic uncertainty on the transfer factors, as discussed in Sect. ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 79,
            "section_rank": 17
        },
        {
            "text": "2 (Eq. 2). ",
            "section": "Systematic uncertainties",
            "paragraph_rank": 79,
            "section_rank": 17
        },
        {
            "text": "The OneSide and Sym keywords indicate that a one-sided or a symmetrized uncertainty should be constructed when using tree-based or weight-based inputs.",
            "section": "Systematic uncertainties",
            "paragraph_rank": 79,
            "section_rank": 17
        },
        {
            "text": "Performing fits",
            "section_rank": 18
        },
        {
            "text": "Different fit strategies are commonly used in physics analyses, differing by the usage of particular combinations of CRs, SRs, and VRs, and by the consideration of a signal model or not. ",
            "section": "Performing fits",
            "paragraph_rank": 80,
            "section_rank": 18
        },
        {
            "text": "Fit strategies aim to either derive background estimates in VRs and SRs, or to make quantitative statements on the compatibility of the background estimate(s) with the observed data in the SR(s). ",
            "section": "Performing fits",
            "paragraph_rank": 80,
            "section_rank": 18
        },
        {
            "text": "HistFitter is tailored specifically to the design and implementation of such fit strategies.",
            "section": "Performing fits",
            "paragraph_rank": 80,
            "section_rank": 18
        },
        {
            "text": "Also discussed in this section are the technical and statistical details of the extrapolation of background processes across CRs, SRs and VRs.",
            "section": "Performing fits",
            "paragraph_rank": 81,
            "section_rank": 18
        },
        {
            "text": "Common fit strategies",
            "section_rank": 19
        },
        {
            "text": "The three most commonly used fit strategies in HistFitter are defined as: the \"background-only fit\"; the \"model-dependent signal fit\"; and the \"model-independent signal fit\". ",
            "section": "Common fit strategies",
            "paragraph_rank": 82,
            "section_rank": 19
        },
        {
            "text": "5 This section describes the details of each fit strategy, as also summarized in Table 2 at the end of the section. ",
            "section": "Common fit strategies",
            "paragraph_rank": 82,
            "section_rank": 19,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b3",
                    "text": "5"
                },
                {
                    "start": 81,
                    "end": 88,
                    "type": "table",
                    "ref_id": "tab_3",
                    "text": "Table 2"
                }
            ]
        },
        {
            "text": "The application of these to validation and hypothesis-testing purposes is described in detail in Sects. ",
            "section": "Common fit strategies",
            "paragraph_rank": 82,
            "section_rank": 19
        },
        {
            "text": "6 and 7, respectively.",
            "section": "Common fit strategies",
            "paragraph_rank": 82,
            "section_rank": 19
        },
        {
            "text": "Background-only fit",
            "section_rank": 20
        },
        {
            "text": "The purpose of this fit strategy is to estimate the total background in SRs and VRs, without making assumptions on any signal model. ",
            "section": "Background-only fit",
            "paragraph_rank": 83,
            "section_rank": 20
        },
        {
            "text": "As the name suggests, only background samples are used in the model. ",
            "section": "Background-only fit",
            "paragraph_rank": 83,
            "section_rank": 20
        },
        {
            "text": "The CRs are assumed to be free of signal contamination. ",
            "section": "Background-only fit",
            "paragraph_rank": 83,
            "section_rank": 20
        },
        {
            "text": "The fit is only performed in the CR(s), and the dominant background processes are normalized to the observed event counts in these regions. ",
            "section": "Background-only fit",
            "paragraph_rank": 83,
            "section_rank": 20
        },
        {
            "text": "The maximized likelihood function is that of Eq. ",
            "section": "Background-only fit",
            "paragraph_rank": 83,
            "section_rank": 20
        },
        {
            "text": "3 minus the signal regions. ",
            "section": "Background-only fit",
            "paragraph_rank": 83,
            "section_rank": 20
        },
        {
            "text": "As the background parameters of the PDF are shared in all different regions, the result of this fit can be used to predict the number of events in the SRs and VRs.",
            "section": "Background-only fit",
            "paragraph_rank": 83,
            "section_rank": 20
        },
        {
            "text": "The background predictions from the background-only fit are independent of the observed number of events in each SR and VR, as only the CR(s) are used in the fit. ",
            "section": "Background-only fit",
            "paragraph_rank": 84,
            "section_rank": 20
        },
        {
            "text": "This allows for an unbiased comparison between the predicted and observed number of events in each region. ",
            "section": "Background-only fit",
            "paragraph_rank": 84,
            "section_rank": 20
        },
        {
            "text": "In Sect. ",
            "section": "Background-only fit",
            "paragraph_rank": 84,
            "section_rank": 20
        },
        {
            "text": "6 the backgroundonly fit predictions are used to validate the transfer factorbased background level predictions.",
            "section": "Background-only fit",
            "paragraph_rank": 84,
            "section_rank": 20
        },
        {
            "text": "Another important use case for background-only fit results in the SR(s) is for external groups to perform an hypothesis test on an untested signal model, which has not been studied by the experiment. ",
            "section": "Background-only fit",
            "paragraph_rank": 85,
            "section_rank": 20
        },
        {
            "text": "With the complex fits currently performed at the LHC, it may be difficult (if not impossible) for outsiders to reconstruct these. ",
            "section": "Background-only fit",
            "paragraph_rank": 85,
            "section_rank": 20
        },
        {
            "text": "An independent background estimate in the SR, as provided by the background-only fit, is then the correct estimate to use as input to any hypothesis test.",
            "section": "Background-only fit",
            "paragraph_rank": 85,
            "section_rank": 20
        },
        {
            "text": "For completeness we also introduce the concept of background-level estimates obtained from a backgroundonly fit in both the CRs and SRs. ",
            "section": "Background-only fit",
            "paragraph_rank": 86,
            "section_rank": 20
        },
        {
            "text": "6 The RooStats routines employed in HistFitter perform such a background only fit internally, before running any hypothesis testing; discussed further in Sect. ",
            "section": "Background-only fit",
            "paragraph_rank": 86,
            "section_rank": 20,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b4",
                    "text": "6"
                }
            ]
        },
        {
            "text": "7. ",
            "section": "Background-only fit",
            "paragraph_rank": 86,
            "section_rank": 20
        },
        {
            "text": "However, unless indicated explicitly, any background-level prediction made by HistFitter does not rely on SR (or VR) information.",
            "section": "Background-only fit",
            "paragraph_rank": 86,
            "section_rank": 20
        },
        {
            "text": "Model-dependent signal fit",
            "section_rank": 21
        },
        {
            "text": "This fit strategy is used with the objective of studying a specific signal model. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 87,
            "section_rank": 21
        },
        {
            "text": "In the absence of a significant event excess in the SR(s), as concluded with the background-only fit configuration, exclusion limits can be set on the signal models under study. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 87,
            "section_rank": 21
        },
        {
            "text": "In case of excess, the model-dependent signal fit can be used to measure properties such as the signal strength. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 87,
            "section_rank": 21
        },
        {
            "text": "The fit is performed in the CRs and SRs simultaneously. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 87,
            "section_rank": 21
        },
        {
            "text": "Along with the background samples, a signal sample is included in all regions, not just the SR(s), to correctly account for possible signal contamination in the CRs. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 87,
            "section_rank": 21
        },
        {
            "text": "A normalization factor, the signal strength parameter \u03bc sig , is assigned to the signal sample.",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 87,
            "section_rank": 21
        },
        {
            "text": "Note that this fit strategy can be run with multiple SRs (and CRs) simultaneously, as long as these are statistically independent, non-overlapping regions. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 88,
            "section_rank": 21
        },
        {
            "text": "If multiple SRs are sensitive to the same signal model, performing the modeldependent signal fit on the statistical combination of these regions shall, in general, give better (or equal) exclusion sensitivity than obtained in the individual analyses. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 88,
            "section_rank": 21
        },
        {
            "text": "An example of this is given in Fig. 10 (right) of Sect. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 88,
            "section_rank": 21,
            "ref_spans": [
                {
                    "start": 31,
                    "end": 46,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "Fig. 10 (right)"
                }
            ]
        },
        {
            "text": "7.2.",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 88,
            "section_rank": 21
        },
        {
            "text": "In a similar fashion, using multiple bins of a signalsensitive observable in the definition of the SR(s) will generally give a better sensitivity to any signal model studied. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 89,
            "section_rank": 21
        },
        {
            "text": "7 An example of such a \"shape-fit\" signal region is shown in Fig. 8 of Sect. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 89,
            "section_rank": 21,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b5",
                    "text": "7"
                },
                {
                    "start": 61,
                    "end": 67,
                    "type": "figure",
                    "text": "Fig. 8"
                }
            ]
        },
        {
            "text": "6.1.",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 89,
            "section_rank": 21
        },
        {
            "text": "Typically, a grid of signal samples for a particular signal model is produced by varying some of the model parameters, e.g. the masses of predicted particles. ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 90,
            "section_rank": 21
        },
        {
            "text": "The model-dependent signal fit is repeated for each of these grid points, thereby ",
            "section": "Model-dependent signal fit",
            "paragraph_rank": 90,
            "section_rank": 21
        },
        {
            "text": "Model-independent signal fit",
            "section_rank": 22
        },
        {
            "text": "An analysis searching for new physics phenomena typically sets model-independent upper limits on the number of signal events on top of the expected number of background events in each SR. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "In this way, for any signal model of interest, anyone can estimate the number of signal events predicted in a particular signal region and check if the model has been excluded by current measurements or not. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "Setting the upper limit is accomplished by performing a model-independent signal fit. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "For this fit strategy, both the CRs and SRs are used, in the same manner as for the modeldependent signal fit. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "Signal contamination is not allowed in the CRs, but no other assumptions are made for the signal model, also called a \"dummy signal\" prediction. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "The SR in this fit configuration is constructed as a single-bin region, since having more bins requires assumptions on the signal spread over these bins. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "The number of signal events in the signal region is added as a parameter to the fit. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "Otherwise, the fit proceeds in the same way as the model-dependent signal fit.",
            "section": "Model-independent signal fit",
            "paragraph_rank": 91,
            "section_rank": 22
        },
        {
            "text": "The model-independent signal fit strategy, fitting both the CRs and each SR, is also used to perform the backgroundonly hypothesis test, which quantifies the significance of any observed excess of events in a SR, again in a manner that is independent of any particular signal model. ",
            "section": "Model-independent signal fit",
            "paragraph_rank": 92,
            "section_rank": 22
        },
        {
            "text": "One main but subtle difference between the model-independent signal hypothesis test (Sect. 7.4) and the background-only hypothesis test (Sect. 7.5) is that the signal strength parameter is set to one or zero in the profile likelihood numerator respectively.",
            "section": "Model-independent signal fit",
            "paragraph_rank": 92,
            "section_rank": 22
        },
        {
            "text": "Extrapolation and error propagation",
            "section_rank": 23
        },
        {
            "text": "This section discusses the extrapolation of coherently normalized background estimates from the CR(s) to each SR and VR, as obtained from the background-only fit. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 93,
            "section_rank": 23
        },
        {
            "text": "8 The basic strategy behind the background extrapolation approach is to share the background parameters of the PDF in all the different regions: CRs, SRs and VRs. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 93,
            "section_rank": 23,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b6",
                    "text": "8"
                }
            ]
        },
        {
            "text": "A backgroundonly fit to the CRs technically requires a PDF modeling only the CRs. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 93,
            "section_rank": 23
        },
        {
            "text": "However, the extrapolation of the normalized background processes from the CRs to the SRs and VRs, which uses the background-only fit result, requires a different PDF containing all these regions.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 93,
            "section_rank": 23
        },
        {
            "text": "In HistFitter, the construction of these various PDFs proceeds as follows. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 94,
            "section_rank": 23
        },
        {
            "text": "First a total PDF describing all CRs, SRs and VRs is constructed using HistFactory. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 94,
            "section_rank": 23
        },
        {
            "text": "This PDF is not used to fit the data, as the likelihood is unaware of the concept of different region types. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 94,
            "section_rank": 23
        },
        {
            "text": "HistFitter has dedicated functions to deconstruct and reconstruct PDFs, based on the channel type information of CR, VR and SR set in the configuration file, as discussed in Sect. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 94,
            "section_rank": 23
        },
        {
            "text": "4.3.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 94,
            "section_rank": 23
        },
        {
            "text": "To perform the background-only fit, the total PDF is deconstructed and then reconstructed describing only the CRs. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 95,
            "section_rank": 23
        },
        {
            "text": "The result of the background-only fit is stored, containing the values, the errors and the covariance matrix corresponding to all fit parameters. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 95,
            "section_rank": 23
        },
        {
            "text": "After this fit, the normalized backgrounds are extrapolated to the SRs (or VRs). ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 95,
            "section_rank": 23
        },
        {
            "text": "For this HistFitter deconstructs and reconstructs the total PDF, now describing the CRs and SRs (or VRs). ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 95,
            "section_rank": 23
        },
        {
            "text": "The background-only fit result is then incorporated into this PDF to obtain the extrapolated background prediction b in any SR (or VR).",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 95,
            "section_rank": 23
        },
        {
            "text": "Once the background-only fit to data has been performed and the total PDF been reconstructed, an estimate of the uncertainty on an extrapolated background prediction \u03c3 b, tot can be calculated. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 96,
            "section_rank": 23
        },
        {
            "text": "The determination of this error requires the uncertainties and correlations from the stored fit result. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 96,
            "section_rank": 23
        },
        {
            "text": "The total error on b is calculated using the typical error propagation formula",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 96,
            "section_rank": 23
        },
        {
            "text": "where \u03b7 i are the floating fit parameters, consisting of normalization factors \u03bc p and nuisance parameters \u03b8 , \u03c1 i j is the correlation coefficient, between \u03b7 i and \u03b7 j , and \u03c3 \u03b7 i is the standard deviation of \u03b7 i . ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 97,
            "section_rank": 23
        },
        {
            "text": "Any partial derivatives to b are evaluated on the fly. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 97,
            "section_rank": 23
        },
        {
            "text": "The after-fit parameter values, errors and correlations are saved in the RooFit's fit result class. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 97,
            "section_rank": 23
        },
        {
            "text": "Let us take an example of a background-only fit result (from CRs only) that needs to be extrapolated to a SR. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 97,
            "section_rank": 23
        },
        {
            "text": "The total PDF (consisting of CRs and SRs) contains a set of parameters that can be subdivided as follows.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 97,
            "section_rank": 23
        },
        {
            "text": "1. There is a large set of parameters shared between CRs and SR, \u03b7 shared , for example the background normalization factors and most systematic uncertainties. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 98,
            "section_rank": 23
        },
        {
            "text": "2. There is a subset of parameters connected only to the CRs, \u03b7 CR , for example the uncertainties due to limited Monte Carlo statistics in the CRs. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 98,
            "section_rank": 23
        },
        {
            "text": "3. And finally, there is another subset of parameters connected only to the SR, \u03b7 SR , for example the uncertainties due to limited Monte Carlo statistics in the SR.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 98,
            "section_rank": 23
        },
        {
            "text": "When the fit is performed with the (deconstructed) CRs-only PDF, only the parameters \u03b7 shared and \u03b7 CR are evaluated and saved in the fit result. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 99,
            "section_rank": 23
        },
        {
            "text": "Hence when this fit result is propagated to the SR, the estimated error only contains the parameters that are shared between the CRs and the SR, and thus is incomplete. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 99,
            "section_rank": 23
        },
        {
            "text": "The uncertainties corresponding to \u03b7 SR are not picked up in Eq. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 99,
            "section_rank": 23
        },
        {
            "text": "5, as these are not contained in the fit result.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 99,
            "section_rank": 23
        },
        {
            "text": "HistFitter uses an expanded version of RooFit's fit result class that contains all of the nuisance parameters of all regions in the extrapolation PDF, even if these are not used in the background-only fit configuration. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 100,
            "section_rank": 23
        },
        {
            "text": "This expansion makes it possible to extrapolate all of the shared parameters to any region. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 100,
            "section_rank": 23
        },
        {
            "text": "Knowing also the unshared parameters of a particular region, a complete error can then be calculated for that region. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 100,
            "section_rank": 23
        },
        {
            "text": "In the expanded fit result, the correlations between the shared and unshared parameters are set to zero.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 100,
            "section_rank": 23
        },
        {
            "text": "Using the expanded fit result class the VRs can now provide a rigorous statistical cross check. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 101,
            "section_rank": 23
        },
        {
            "text": "If the background-only fit to the CRs finds that changing the background normalization and/or shape parameters of a kinematic distribution gives a better description of the data, this will be reflected automatically in the VRs. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 101,
            "section_rank": 23
        },
        {
            "text": "Likewise, if the uncertainty on these parameters has a strong impact, and is reduced by the fit, the effect will be readily propagated.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 101,
            "section_rank": 23
        },
        {
            "text": "In HistFitter, the before-fit parameter values, errors and correlations are stored in an expanded fit result object as well. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 102,
            "section_rank": 23
        },
        {
            "text": "The before-fit and after-fit background value and uncertainty predictions can thus be easily compared. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 102,
            "section_rank": 23
        },
        {
            "text": "A few assumptions are made to construct this before-fit object. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 102,
            "section_rank": 23
        },
        {
            "text": "First, all correlations are set to zero prior to the fit, effectively taking out the second term in Eq. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 102,
            "section_rank": 23
        },
        {
            "text": "5. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 102,
            "section_rank": 23
        },
        {
            "text": "Second, the errors on the normalization factors of the background processes are unknown prior to the fit, and hence set to zero.",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 102,
            "section_rank": 23
        },
        {
            "text": "The fit strategies of Sect. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 103,
            "section_rank": 23
        },
        {
            "text": "5.1 are illustrated in Fig. 6, together with the PDF restructuring detailed in this section. ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 103,
            "section_rank": 23,
            "ref_spans": [
                {
                    "start": 23,
                    "end": 29,
                    "type": "figure",
                    "text": "Fig. 6"
                }
            ]
        },
        {
            "text": "In Fig. 6, the various constructed PDFs are indicated as rounded squares and the fit configurations, on the right-hand side, as squares.  ",
            "section": "Extrapolation and error propagation",
            "paragraph_rank": 103,
            "section_rank": 23,
            "ref_spans": [
                {
                    "start": 3,
                    "end": 9,
                    "type": "figure",
                    "text": "Fig. 6"
                }
            ]
        },
        {
            "text": "Presentation of results",
            "section_rank": 24
        },
        {
            "text": "HistFitter contains an extensive array of user-friendly functions and scripts, which help to understand in detail the results obtained from the fits. ",
            "section": "Presentation of results",
            "paragraph_rank": 104,
            "section_rank": 24
        },
        {
            "text": "All scripts and plotting functions can be called by single-line commands. ",
            "section": "Presentation of results",
            "paragraph_rank": 104,
            "section_rank": 24
        },
        {
            "text": "These scripts and plotting functions are generalized, and work for each model built with HistFitter.",
            "section": "Presentation of results",
            "paragraph_rank": 104,
            "section_rank": 24
        },
        {
            "text": "Two main presentation components are the visualization of fit results and scripts for producing event yield and uncertainty tables. ",
            "section": "Presentation of results",
            "paragraph_rank": 105,
            "section_rank": 24
        },
        {
            "text": "Both rely critically on the fits to data and uncertainty extrapolation features discussed in Sect. ",
            "section": "Presentation of results",
            "paragraph_rank": 105,
            "section_rank": 24
        },
        {
            "text": "5. ",
            "section": "Presentation of results",
            "paragraph_rank": 105,
            "section_rank": 24
        },
        {
            "text": "All tables and plots, discussed in the next two sections, can be produced for any fit configuration of a defined model, as well as before and after the fit to the data. ",
            "section": "Presentation of results",
            "paragraph_rank": 105,
            "section_rank": 24
        },
        {
            "text": "Multiple details, such as the legends on plots or the set of regions to be processed for tables, can be set in the configuration file or from the command line.",
            "section": "Presentation of results",
            "paragraph_rank": 105,
            "section_rank": 24
        },
        {
            "text": "All tables and figures shown in this section come directly from publications by the ATLAS collaboration, and serve only as illustrations of the HistFitter tools that are discussed.",
            "section": "Presentation of results",
            "paragraph_rank": 106,
            "section_rank": 24
        },
        {
            "text": "Visualization of fit results",
            "section_rank": 25
        },
        {
            "text": "HistFitter can produce several classes of figures to visualize fit results, as detailed below. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25
        },
        {
            "text": "Figure 7 shows an example plot of a multi-bin (control) region before (left) and after (right) the fit to the data, taken from Ref. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 8,
                    "type": "figure",
                    "ref_id": "fig_6",
                    "text": "Figure 7"
                }
            ]
        },
        {
            "text": "[2]. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 3,
                    "type": "bibr",
                    "text": "[2]"
                }
            ]
        },
        {
            "text": "Similar plots can be produced for any region defined in HistFitter, either single-or multi-binned. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25
        },
        {
            "text": "Each sample in the example region (channel) is portrayed by a different color. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25
        },
        {
            "text": "The samples can also be plotted separately (not shown), for the purpose of understanding the distribution of the uncertainties over the samples. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25
        },
        {
            "text": "The impact of the  fit to data can be studied by comparing the before-fit to afterfit distributions. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25
        },
        {
            "text": "In the after-fit plot, as a result of the fit, the normalization, shapes and corresponding uncertainties of the background samples have been adjusted to best describe the observed data over all bins.",
            "section": "Visualization of fit results",
            "paragraph_rank": 107,
            "section_rank": 25
        },
        {
            "text": "An example of two multi-binned SRs, used in Ref. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25
        },
        {
            "text": "[19], is shown in Fig. 8. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                },
                {
                    "start": 18,
                    "end": 24,
                    "type": "figure",
                    "text": "Fig. 8"
                }
            ]
        },
        {
            "text": "Two different supersymmetry models, showing strong variations in the event yields over the bins of the SRs, are superimposed on the before-fit background predictions. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25
        },
        {
            "text": "Figure 9 shows an example of a pull distribution for a set of non-overlapping VRs, as produced with HistFitter and taken from Ref. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 8,
                    "type": "figure",
                    "text": "Figure 9"
                }
            ]
        },
        {
            "text": "[2]. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 3,
                    "type": "bibr",
                    "text": "[2]"
                }
            ]
        },
        {
            "text": "The example relies on the background prediction in each VR, as obtained from a fit to the CRs,  (   Fig. 8 Example produced by the ATLAS collaboration and taken from Ref. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 96,
                    "end": 106,
                    "type": "figure",
                    "text": "(   Fig. 8"
                }
            ]
        },
        {
            "text": "[19]. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                }
            ]
        },
        {
            "text": "Effective mass distributions in the signal regions SR0b and SR1b, used as input for model-dependent signal fits. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25
        },
        {
            "text": "For illustration, predictions are shown from two SUSY signal models with particular sensitivity in each signal region and tests the validity of the transfer-factor based extrapolation. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25
        },
        {
            "text": "The pull \u03c7 is calculated as the difference between the observed n obs and predicted event numbers n pred , divided by the total systematic uncertainty on the background prediction, \u03c3 pred , added in quadrature to the Poissonian variation on the expected number of background events, \u03c3 stat, exp .",
            "section": "Visualization of fit results",
            "paragraph_rank": 108,
            "section_rank": 25
        },
        {
            "text": "If, on average, the pulls for all the validation regions would be negative (positive), the data is overestimated (underes- Electron Channel Muon Channel Electron-Muon Channel Fig. 9 Example produced by the ATLAS collaboration and taken from Ref. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 109,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 175,
                    "end": 181,
                    "type": "figure",
                    "text": "Fig. 9"
                }
            ],
            "entity_spans": [
                {
                    "start": 132,
                    "end": 139,
                    "type": "software",
                    "rawForm": "Channel",
                    "resp": "whitelist",
                    "id": "software-simple-w28"
                },
                {
                    "start": 145,
                    "end": 152,
                    "type": "software",
                    "rawForm": "Channel",
                    "resp": "whitelist",
                    "id": "software-simple-w29"
                },
                {
                    "start": 167,
                    "end": 174,
                    "type": "software",
                    "rawForm": "Channel",
                    "resp": "whitelist",
                    "id": "software-simple-w30"
                }
            ]
        },
        {
            "text": "[2]. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 109,
            "section_rank": 25,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 3,
                    "type": "bibr",
                    "text": "[2]"
                }
            ]
        },
        {
            "text": "Summary of the fit results in the validation regions. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 109,
            "section_rank": 25
        },
        {
            "text": "The difference between the observed and predicted number, divided by the total (statistical and systematic) uncertainty on the prediction, is shown for each validation region timated) and the model needs to be corrected. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 109,
            "section_rank": 25
        },
        {
            "text": "If the background model is properly tuned, on average good agreement is found between the data and the estimated background model.",
            "section": "Visualization of fit results",
            "paragraph_rank": 109,
            "section_rank": 25
        },
        {
            "text": "Other validation plots can be produced, mostly helpful for internal or debugging purposes. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 110,
            "section_rank": 25
        },
        {
            "text": "Likelihood scans can be made for any of the fit parameters to help understand the likelihood maximization performed in the fit. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 110,
            "section_rank": 25
        },
        {
            "text": "Furthermore, the correlation matrix of any fit can be plotted to study correlations between the fit parameters and possible degenerate degrees of freedom. ",
            "section": "Visualization of fit results",
            "paragraph_rank": 110,
            "section_rank": 25
        },
        {
            "text": "Those examples are not unique to Hist-Fitter, and are therefore not shown here.",
            "section": "Visualization of fit results",
            "paragraph_rank": 110,
            "section_rank": 25
        },
        {
            "text": "Scripts for event yield, systematic uncertainty and pull tables",
            "section_rank": 26
        },
        {
            "text": "The production of detailed tables showing the estimated background event levels, the number of observed events and the breakdown of the systematic uncertainties is an essential part of every analysis. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26
        },
        {
            "text": "HistFitter includes several scripts to produce publication ready (LaTeX) tables. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26,
            "entity_spans": [
                {
                    "start": 66,
                    "end": 71,
                    "type": "software",
                    "rawForm": "LaTeX",
                    "resp": "whitelist",
                    "id": "software-simple-w31"
                }
            ]
        },
        {
            "text": "Table 3 shows the results of the background-only fit to the CRs, extrapolated to a set of SRs and broken down into the various background processes, as taken from Ref. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "table",
                    "ref_id": "tab_5",
                    "text": "Table 3"
                }
            ]
        },
        {
            "text": "[3] and produced with HistFitter. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 3,
                    "type": "bibr",
                    "ref_id": "b1",
                    "text": "[3]"
                }
            ]
        },
        {
            "text": "The total background prediction, combined with the number of observed events in a signal region, allows the discovery p-value or limit setting to be re-derived in good approximation by third parties that do not have access to the full analysis. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26
        },
        {
            "text": "The background predictions before the fit are shown in parenthesis. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26
        },
        {
            "text": "The error on the total background estimate shows the statistical (from limited MC simulation and CR statistics combined) and systematic uncertainties separately, while for the individual background samples the combined uncertainties are given as a single number. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26
        },
        {
            "text": "The uncertainties on the predicted background event yields are quoted as symmetric, except where the negative error reaches below zero predicted events, in which case the negative error gets truncated to zero. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26
        },
        {
            "text": "The errors shown are the after-fit uncertainties, though beforefit uncertainties can also be shown by the table-production script.",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 111,
            "section_rank": 26,
            "entity_spans": [
                {
                    "start": 123,
                    "end": 129,
                    "type": "software",
                    "rawForm": "script",
                    "resp": "whitelist",
                    "id": "software-simple-w32"
                }
            ]
        },
        {
            "text": "There are two methods implemented in HistFitter to calculate the systematic uncertainty on a background level prediction of an analysis associated to a specific (set of) nuisance parameter(s), such as detector response effects or theoretical uncertainties.",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 112,
            "section_rank": 26
        },
        {
            "text": "1. The first method takes the nominal after-fit result and sets all floating parameters constant. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26
        },
        {
            "text": "Then, iteratively, it sets each (or several, as requested) nuisance parameter(s) \u03b7 i floating, and calculates the uncertainty propagated to the background prediction due to the specific parameter(s), using the covariance matrix of the nominal fit and Eq. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26
        },
        {
            "text": "5. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26
        },
        {
            "text": "2. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26
        },
        {
            "text": "The second method sets a single (or multiple, as requested) floating nuisance parameter(s) constant and then refits the data, thus excluding these systematic uncertainties from the model. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26
        },
        {
            "text": "The quadratic difference between the total error of the nominal setup and the fixed parameter(s) setup is then assigned as the systematic uncertainty, as follows: Table 4 shows the systematic breakdown of the background estimate uncertainty in a set of signal regions, as produced with method one and taken from Ref. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26,
            "ref_spans": [
                {
                    "start": 163,
                    "end": 170,
                    "type": "table",
                    "text": "Table 4"
                }
            ]
        },
        {
            "text": "[19]. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                }
            ]
        },
        {
            "text": "Each row shows the uncertainty corresponding to one or more nuisance parameters, as detailed in the reference.  ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26
        },
        {
            "text": "Table 4 Example produced by the ATLAS collaboration and taken from Ref. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "table",
                    "text": "Table 4"
                }
            ]
        },
        {
            "text": "[19]. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                }
            ]
        },
        {
            "text": "Number of observed data events and expected backgrounds and summary of the systematic uncertainties on the background predictions for SR3b, SR0b, SR1b, SR3Llow and SR3Lhigh. ",
            "section": "Scripts for event yield, systematic uncertainty and pull tables",
            "paragraph_rank": 113,
            "section_rank": 26
        },
        {
            "text": "Interpretation of results",
            "section_rank": 27
        },
        {
            "text": "HistFitter provides the functionality to perform hypothesis tests of the data through calls to the appropriate RooStats classes, and to interpret the corresponding results in the form of plots and tables. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "Four different statistical tests are available in HistFitter. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "Each of these depend on the fit setups outlined in Sect. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "5.1. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "In each of these setups both the CR(s) and SR(s) are part of the input to the fit. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "In the absence of an observed excess of events in one or more SR(s), the first two methods set exclusion limits on specific signal models. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "Both use the model-dependent signal fit configuration. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "The third approach obtains exclusion upper limits on any potential new physics signal, without model dependency. ",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "The fourth interpretation performs the significance determination of a potentially observed event excess.",
            "section": "Interpretation of results",
            "paragraph_rank": 114,
            "section_rank": 27
        },
        {
            "text": "Both of these rely on the model-independent signal fit configuration.",
            "section": "Interpretation of results",
            "paragraph_rank": 115,
            "section_rank": 27
        },
        {
            "text": "These different statistical tests are discussed in the following sections, after a summary of the statistical formalism.",
            "section": "Interpretation of results",
            "paragraph_rank": 116,
            "section_rank": 27
        },
        {
            "text": "All tables and figures shown in this section (except for Table 6) come directly from publications by the ATLAS collaboration and serve only as illustrations of the HistFitter tools that are discussed.",
            "section": "Interpretation of results",
            "paragraph_rank": 117,
            "section_rank": 27,
            "ref_spans": [
                {
                    "start": 57,
                    "end": 64,
                    "type": "table",
                    "text": "Table 6"
                }
            ]
        },
        {
            "text": "Statistical formalism",
            "section_rank": 28
        },
        {
            "text": "The RooStats routines of Sect. ",
            "section": "Statistical formalism",
            "paragraph_rank": 118,
            "section_rank": 28
        },
        {
            "text": "3.3 are employed in HistFitter for hypothesis testing. ",
            "section": "Statistical formalism",
            "paragraph_rank": 118,
            "section_rank": 28
        },
        {
            "text": "A Frequentist approach is used in all of the methods explained below, together with the CLs method in case of exclusion hypothesis tests. ",
            "section": "Statistical formalism",
            "paragraph_rank": 118,
            "section_rank": 28
        },
        {
            "text": "Though not strictly HistFitter specific, some details on the statistical formalism used follow here.",
            "section": "Statistical formalism",
            "paragraph_rank": 118,
            "section_rank": 28
        },
        {
            "text": "The profile likelihood ratio",
            "section_rank": 29
        },
        {
            "text": "As described in detail in Ref. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 119,
            "section_rank": 29
        },
        {
            "text": "[29], the likelihood function L used in the profile likelihood ratio is built from the observed data and the parametric model that describes the data. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 119,
            "section_rank": 29,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b26",
                    "text": "[29]"
                }
            ]
        },
        {
            "text": "9 The profile log likelihood ratio for one hypothesized signal rate \u03bc sig is given by the test statistic:",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 119,
            "section_rank": 29,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b7",
                    "text": "9"
                }
            ]
        },
        {
            "text": "where\u03bc sig ,\u03b8 maximize the likelihood function, and\u03b8 maximize the likelihood for the specific, fixed value of the signal strength \u03bc sig . ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 120,
            "section_rank": 29
        },
        {
            "text": "Different definitions of q \u03bc sig apply to discovery and signal model exclusion hypothesis tests, and also to different ranges of \u03bc sig , as discussed in detail in Ref. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 120,
            "section_rank": 29
        },
        {
            "text": "[29]. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 120,
            "section_rank": 29,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b26",
                    "text": "[29]"
                }
            ]
        },
        {
            "text": "The Frequentist probability value, or p-value, assigned by an hypothesis test of the data, e.g. a discovery or signal model exclusion test, is calculated using a distribution of the test statistic, f (q \u03bc sig | \u03bc sig , \u03b8 ). ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 120,
            "section_rank": 29
        },
        {
            "text": "This distribution can be obtained by throwing multiple pseudo experiments that randomize the number of observed events and the central values of the auxiliary measurements.",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 120,
            "section_rank": 29
        },
        {
            "text": "The test statistic q \u03bc sig has an important property. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 121,
            "section_rank": 29
        },
        {
            "text": "According to Wilks' theorem [30] the distribution of f (q \u03bc sig | \u03bc sig , \u03b8 ) is known in the case of a large statistics data sample. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 121,
            "section_rank": 29,
            "ref_spans": [
                {
                    "start": 28,
                    "end": 32,
                    "type": "bibr",
                    "ref_id": "b27",
                    "text": "[30]"
                }
            ]
        },
        {
            "text": "For a single signal parameter, \u03bc sig , it follows a \u03c7 2 distribution with one degree of freedom and is independent of actual values of the auxiliary measurements, thus making it easy to approximate. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 121,
            "section_rank": 29
        },
        {
            "text": "The case of large statistics is also called \"the asymptotic regime\". ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 121,
            "section_rank": 29
        },
        {
            "text": "Approximation of large statistics holds reasonably well in most cases, e.g. from as few as O(10) data events. ",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 121,
            "section_rank": 29
        },
        {
            "text": "Typically one therefore uses asymptotic formulas 10 to evaluate the p-value of the hypothesis test, avoiding the need for time-costly pseudo experiments.",
            "section": "The profile likelihood ratio",
            "paragraph_rank": 121,
            "section_rank": 29
        },
        {
            "text": "The profile construction",
            "section_rank": 30
        },
        {
            "text": "When not working in the asymptotic regime, i.e. in cases of low statistics, the distribution of the test statistic f (q \u03bc sig | \u03bc sig , \u03b8 ) needs to be sampled using pseudo experiments. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "As the true values of the auxiliary measurement are unknown, one ideally scans \u03bc sig and \u03b8 0 to generate a sufficiently high number of pseudo experiments for each set. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "In this way one can find the values that give the highest covering p-value for the parameter of interest. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "For example, one cannot exclude a signal model if there is any set of auxiliary measurement values where the CLs value is greater than 5 %. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "This is not a practical procedure when there is a large set of auxiliary measurements to consider. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "However, it turns out a good guess can be made of what values of \u03b8 0 maximize the p-value. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "The idea is the following. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "As a p-value is based on the observed data, the largest p-value essentially corresponds to the scenario that is most compatible with the data. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "Therefore one first fits the nuisance parameters based on the observed data and the hypothesized value of \u03bc sig , including all control and signal regions. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "These are then used to set the auxiliary measurement values. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "In statistics terms: the nuisance parameters have been \"profiled\" on the observed data. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "Based on this, one generates the pseudo experiments that are expected to maximize the p-value over the auxiliary measurements, and the observed p-value is evaluated as usual. ",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "This procedure is called \"the profile construction\".",
            "section": "The profile construction",
            "paragraph_rank": 122,
            "section_rank": 30
        },
        {
            "text": "This procedure guarantees exact statistical coverage for a counting experiment in the case where the fitted values of \u03b8 0 correspond to their true values. ",
            "section": "The profile construction",
            "paragraph_rank": 123,
            "section_rank": 30
        },
        {
            "text": "Towards the asymptotic regime, however, the distribution of f (q \u03bc sig | \u03bc sig , \u03b8 ) becomes independent of the values of the auxiliary measurements used to generate the pseudo experiments. ",
            "section": "The profile construction",
            "paragraph_rank": 123,
            "section_rank": 30
        },
        {
            "text": "As a result, when using this procedure, the p-value obtained from the hypothesis test is robust, and generally will not undercover.",
            "section": "The profile construction",
            "paragraph_rank": 123,
            "section_rank": 30
        },
        {
            "text": "Both the observed and expected p-values depend equally on the unknown true values of the auxiliary measurements. ",
            "section": "The profile construction",
            "paragraph_rank": 124,
            "section_rank": 30
        },
        {
            "text": "For consistency reasons, the convention adopted at the LHC is to use the same values to obtain the expected p-value as the observed p-value on the data; i.e. the same fitted background levels are used to generate pseudo experiments for both cases, such that the predicted expectation is the most compatible assessment for the actual observation.",
            "section": "The profile construction",
            "paragraph_rank": 124,
            "section_rank": 30
        },
        {
            "text": "These background-level estimates are obtained from a background-only fit to both the CRs and SRs; a strategy using the most accurate background information available. ",
            "section": "The profile construction",
            "paragraph_rank": 125,
            "section_rank": 30
        },
        {
            "text": "Stated differently, through this choice the expected p-value now depends on the observed data in all regions included in the fit, including the available SRs. ",
            "section": "The profile construction",
            "paragraph_rank": 125,
            "section_rank": 30
        },
        {
            "text": "A consequence of this is discussed in Sect. ",
            "section": "The profile construction",
            "paragraph_rank": 125,
            "section_rank": 30
        },
        {
            "text": "7.4.",
            "section": "The profile construction",
            "paragraph_rank": 125,
            "section_rank": 30
        },
        {
            "text": "Signal model hypothesis test",
            "section_rank": 31
        },
        {
            "text": "In the signal model hypothesis test, a specific model of new physics is tested against the background-only model assumption. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 126,
            "section_rank": 31
        },
        {
            "text": "A signal model prediction is present in all CRs and SRs, as implemented in the model-dependent signal limit fit configuration of Sect. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 126,
            "section_rank": 31
        },
        {
            "text": "5.1. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 126,
            "section_rank": 31
        },
        {
            "text": "The parameter of interest used in these hypothesis tests is the signal strength parameter, where a signal strength of zero corresponds to the background-only model, and a signal strength of one to the background plus signal model.",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 126,
            "section_rank": 31
        },
        {
            "text": "A fit of the background plus signal model is performed first, with the signal strength being a free normalization parameter, to obtain an idea about potential fit failures or problems in the later hypothesis testing. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 127,
            "section_rank": 31
        },
        {
            "text": "The fit result is stored for later usage in the interpretation of the hypothesis test results.",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 127,
            "section_rank": 31
        },
        {
            "text": "Usually, signal hypothesis tests are run for multiple signal scenarios making up a specific model grid, e.g. by modifying a few parameters for a specific supersymmetry model. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 128,
            "section_rank": 31
        },
        {
            "text": "HistFitter provides the possibility to collect the results for the different signal scenarios in a data text file, collecting in particular the observed and expected CLs values, but also the p-values for the various signals. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 128,
            "section_rank": 31
        },
        {
            "text": "Only results of hypothesis tests with a successful initial free fit are saved to the data text file. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 128,
            "section_rank": 31
        },
        {
            "text": "Another macro transforms these entries into twodimensional histograms, for example showing the CLs values versus the SUSY parameter values (or particle masses) of the signal scenarios tested. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 128,
            "section_rank": 31
        },
        {
            "text": "A linear algorithm is used to interpolate the CLs values between signal model parameter values.",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 128,
            "section_rank": 31
        },
        {
            "text": "HistFitter provides macros to visualize the results of the hypothesis tests graphically. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31
        },
        {
            "text": "An example is shown in Fig. 10 (left), taken from Ref. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31,
            "ref_spans": [
                {
                    "start": 23,
                    "end": 30,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "Fig. 10"
                }
            ]
        },
        {
            "text": "[2]. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 3,
                    "type": "bibr",
                    "text": "[2]"
                }
            ]
        },
        {
            "text": "The exclusion limits are shown at 95 % confidence level, based on the CLs prescription, in a socalled one decay step (1-step) simplified model [31]. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31,
            "ref_spans": [
                {
                    "start": 143,
                    "end": 147,
                    "type": "bibr",
                    "ref_id": "b28",
                    "text": "[31]"
                }
            ]
        },
        {
            "text": "There are only two free parameters in these particular SUSY models, mg and m\u03c70 1 , which are used as the variables on the axes to represent this specific SUSY model grid. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31
        },
        {
            "text": "The dark dashed line indicates the expected limit as function of gluino and neutralino masses and the solid red line the observed limit. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31
        },
        {
            "text": "The yellow band gives the 1\u03c3 uncertainty on the expected limit, excluding the theoretical uncertainties on the signal prediction. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31
        },
        {
            "text": "The dotted red lines show the impact of the theoretical uncertainties of the signal model prediction on the observed exclusion contour.",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 129,
            "section_rank": 31
        },
        {
            "text": "Likewise Fig. 10 (right) shows the observed and expected exclusion limits on a gluino-mediated top squark production model, taken from Ref. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 130,
            "section_rank": 31,
            "ref_spans": [
                {
                    "start": 9,
                    "end": 24,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "Fig. 10 (right)"
                }
            ]
        },
        {
            "text": "[19], as obtained from the statistical combination of four multi-binned SRs performed with Hist-Fitter. ",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 130,
            "section_rank": 31,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                }
            ]
        },
        {
            "text": "Besides the expected exclusion limit from the simultaneous fit to all SRs, the expected exclusion limits from the individual SRs are shown for comparison.",
            "section": "Signal model hypothesis test",
            "paragraph_rank": 130,
            "section_rank": 31
        },
        {
            "text": "Signal strength upper limit",
            "section_rank": 32
        },
        {
            "text": "As in Sect. ",
            "section": "Signal strength upper limit",
            "paragraph_rank": 131,
            "section_rank": 32
        },
        {
            "text": "7.2, we consider a specific signal model and the model-dependent signal limit fit configuration in this section. ",
            "section": "Signal strength upper limit",
            "paragraph_rank": 131,
            "section_rank": 32
        },
        {
            "text": "HistFitter provides the possibility to set an upper limit on the signal strength parameter \u03bc sig given the observed data in the signal regions. ",
            "section": "Signal strength upper limit",
            "paragraph_rank": 131,
            "section_rank": 32
        },
        {
            "text": "To do so, the value of the signal strength needs ",
            "section": "Signal strength upper limit",
            "paragraph_rank": 131,
            "section_rank": 32
        },
        {
            "text": "ATLAS",
            "section_rank": 33
        },
        {
            "text": "All limits at 95% CL Fig. 10 Examples produced by the ATLAS collaboration. ",
            "section": "ATLAS",
            "paragraph_rank": 132,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 21,
                    "end": 28,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "Fig. 10"
                }
            ],
            "entity_spans": [
                {
                    "start": 18,
                    "end": 20,
                    "type": "software",
                    "rawForm": "CL",
                    "resp": "whitelist",
                    "id": "software-simple-w33"
                }
            ]
        },
        {
            "text": "Excluded regions at 95 % confidence level in a 1-step simplified model (top), with initial gluino pair production and subsequent decay of the gluinos viag \u2192 qq\u03c7 \u00b1 1 \u2192 qqW\u03c7 0 1 and taken from Ref. ",
            "section": "ATLAS",
            "paragraph_rank": 132,
            "section_rank": 33
        },
        {
            "text": "[2]. ",
            "section": "ATLAS",
            "paragraph_rank": 132,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 3,
                    "type": "bibr",
                    "text": "[2]"
                }
            ]
        },
        {
            "text": "Observed and expected limits on gluino-mediated top squark production (bottom), obtained from a simultaneous fit to four signal regions, and expected exclusion limits from the individual signal regions, produced by the ATLAS collaboration and taken from Ref. ",
            "section": "ATLAS",
            "paragraph_rank": 132,
            "section_rank": 33
        },
        {
            "text": "[19] to be evaluated for which the CLs value falls below a certain level, usually 5 % (for a 95 % CL upper limit).",
            "section": "ATLAS",
            "paragraph_rank": 132,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                }
            ],
            "entity_spans": [
                {
                    "start": 98,
                    "end": 100,
                    "type": "software",
                    "rawForm": "CL",
                    "resp": "whitelist",
                    "id": "software-simple-w34"
                }
            ]
        },
        {
            "text": "In an initial scan, multiple hypothesis tests are executed using the asymptotic calculator [29] to evaluate the CLs values for a wide range of signal strength values, which are estimated from an a fit to the data. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 91,
                    "end": 95,
                    "type": "bibr",
                    "ref_id": "b26",
                    "text": "[29]"
                }
            ]
        },
        {
            "text": "A second scan follows in a smaller, refined interval, using the expected upper limit derived from the first scan. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33
        },
        {
            "text": "Table 5 Example produced by the ATLAS collaboration and taken from Ref. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "table",
                    "text": "Table 5"
                }
            ]
        },
        {
            "text": "[19]. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b17",
                    "text": "[19]"
                }
            ]
        },
        {
            "text": "The 95 % CL upper limits on the visible cross section ( \u03c3 vis 95 obs ), defined as the product of acceptance, reconstruction efficiency and production cross section, and the observed and expected 95 % CL upper limits on the number of signal events (S 95 obs and S 95 exp ) are shown in the second to fourth column, from left to right. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 251,
                    "end": 253,
                    "type": "bibr",
                    "text": "95"
                }
            ],
            "entity_spans": [
                {
                    "start": 9,
                    "end": 11,
                    "type": "software",
                    "rawForm": "CL",
                    "resp": "whitelist",
                    "id": "software-simple-w35"
                },
                {
                    "start": 201,
                    "end": 203,
                    "type": "software",
                    "rawForm": "CL",
                    "resp": "whitelist",
                    "id": "software-simple-w36"
                }
            ]
        },
        {
            "text": "The last column shows the probability, capped at 0.5, that a background-only experiment is more signal-like than observed number of events in a signal region (discussed in Sect. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33
        },
        {
            "text": "7 The obtained upper limit on the signal strength can then easily be converted into an upper limit on the excluded cross section of the signal model tested initially. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 1,
                    "type": "bibr",
                    "ref_id": "b5",
                    "text": "7"
                }
            ]
        },
        {
            "text": "These cross section upper limits are often displayed together with the limits obtained from the signal hypothesis test. ",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33
        },
        {
            "text": "The example discussed in Fig. 10 (left) includes the cross section upper limits as grey numbers for each of the tested signal models.",
            "section": "ATLAS",
            "paragraph_rank": 133,
            "section_rank": 33,
            "ref_spans": [
                {
                    "start": 25,
                    "end": 39,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "Fig. 10 (left)"
                }
            ]
        },
        {
            "text": "Model-independent upper limit",
            "section_rank": 34
        },
        {
            "text": "The 95 % CL upper limit on the number of signal events in a SR is obtained in a similar way as for the model-dependent signal fit configuration. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 134,
            "section_rank": 34,
            "entity_spans": [
                {
                    "start": 9,
                    "end": 11,
                    "type": "software",
                    "rawForm": "CL",
                    "resp": "whitelist",
                    "id": "software-simple-w37"
                }
            ]
        },
        {
            "text": "Here the signal model predicts 1.0 signal events in the SR only, which consists of just one bin.",
            "section": "Model-independent upper limit",
            "paragraph_rank": 134,
            "section_rank": 34
        },
        {
            "text": "By normalizing the signal-strength from the fit to the integrated luminosity of the data sample, and accounting for the uncertainty on the recorded luminosity, this can be interpreted as the upper limit on the visible cross section of any signal model, \u03c3 vis . ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 135,
            "section_rank": 34
        },
        {
            "text": "Here \u03c3 vis is defined as the product of acceptance, reconstruction efficiency and production cross section.",
            "section": "Model-independent upper limit",
            "paragraph_rank": 135,
            "section_rank": 34
        },
        {
            "text": "HistFitter includes a script to calculate and present the upper limits on the number of signal events and on the visible cross section in a (LaTeX) table. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 136,
            "section_rank": 34,
            "entity_spans": [
                {
                    "start": 22,
                    "end": 28,
                    "type": "software",
                    "rawForm": "script",
                    "resp": "whitelist",
                    "id": "software-simple-w38"
                },
                {
                    "start": 141,
                    "end": 146,
                    "type": "software",
                    "rawForm": "LaTeX",
                    "resp": "whitelist",
                    "id": "software-simple-w39"
                }
            ]
        },
        {
            "text": "An example, based on the background estimates of Table 4, is shown in Table 5.",
            "section": "Model-independent upper limit",
            "paragraph_rank": 136,
            "section_rank": 34,
            "ref_spans": [
                {
                    "start": 49,
                    "end": 56,
                    "type": "table",
                    "text": "Table 4"
                },
                {
                    "start": 70,
                    "end": 77,
                    "type": "table",
                    "text": "Table 5"
                }
            ]
        },
        {
            "text": "The profile-likelihood based hypothesis tests use internally the background-level estimates obtained from a background-only fit to both the CRs and SRs (the best estimates available). ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34
        },
        {
            "text": "For consistency, both the observed and expected upper limit (or p-value) determination use the same background-level estimates, such that the expected limit is the most compatible and predictive assessment for the observed limit. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34
        },
        {
            "text": "As a consequence, the expected upper limit depends indirectly on the observed data. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34
        },
        {
            "text": "Table 6 The observed and expected 95 % CL upper limits on the number of signal events (S 95 obs and S 95 exp ), as a function of the background expectation and the observed number of events, as obtained with asymptotic formulas for a single-bin counting experiment. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "table",
                    "text": "Table 6"
                },
                {
                    "start": 89,
                    "end": 91,
                    "type": "bibr",
                    "text": "95"
                }
            ],
            "entity_spans": [
                {
                    "start": 39,
                    "end": 41,
                    "type": "software",
                    "rawForm": "CL",
                    "resp": "whitelist",
                    "id": "software-simple-w40"
                }
            ]
        },
        {
            "text": "The third column shows the background estimate obtained from a fit to the expected background and observed number of events This feature is demonstrated in Table 6, which shows a counting experiment with a constant background expectation and an increasing number of observed events. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34,
            "ref_spans": [
                {
                    "start": 156,
                    "end": 163,
                    "type": "table",
                    "text": "Table 6"
                }
            ]
        },
        {
            "text": "(The background expectation can come from a background-only fit to a set of CRs, which is not discussed here.) ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34
        },
        {
            "text": "The combination results in a consistent rise of the internal backgroundlevel estimates. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34
        },
        {
            "text": "As a result, the 95 % CL upper limit on the expected number of signal events rises as a function of the number of observed events. ",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34,
            "entity_spans": [
                {
                    "start": 22,
                    "end": 24,
                    "type": "software",
                    "rawForm": "CL",
                    "resp": "whitelist",
                    "id": "software-simple-w41"
                }
            ]
        },
        {
            "text": "This behavior, though perhaps counter-intuitive, is a consequence of the profile-likelihood based limit setting procedure employed here.",
            "section": "Model-independent upper limit",
            "paragraph_rank": 137,
            "section_rank": 34
        },
        {
            "text": "Background-only hypothesis test",
            "section_rank": 35
        },
        {
            "text": "For completeness, yet not tailored to HistFitter needs, the background-only hypothesis test quantifies the significance of an excess of events in the signal region by the probability that a background-only experiment is more signal-like than observed, also called the discovery p-value. ",
            "section": "Background-only hypothesis test",
            "paragraph_rank": 138,
            "section_rank": 35
        },
        {
            "text": "The same fit configuration is used as in Sect. ",
            "section": "Background-only hypothesis test",
            "paragraph_rank": 138,
            "section_rank": 35
        },
        {
            "text": "7.4. ",
            "section": "Background-only hypothesis test",
            "paragraph_rank": 138,
            "section_rank": 35
        },
        {
            "text": "An example of calculated discovery p-values is shown in the last column of Table 5. ",
            "section": "Background-only hypothesis test",
            "paragraph_rank": 138,
            "section_rank": 35,
            "ref_spans": [
                {
                    "start": 75,
                    "end": 82,
                    "type": "table",
                    "text": "Table 5"
                }
            ]
        },
        {
            "text": "The probability of the Standard Model background to fluctuate to the observed number of events or higher in each SR has been capped at 0.5.",
            "section": "Background-only hypothesis test",
            "paragraph_rank": 138,
            "section_rank": 35
        },
        {
            "text": "Public release",
            "section_rank": 36
        },
        {
            "text": "The HistFitter software package is publicly available 11 through the web-page http://cern.ch/histfitter, which requires ROOT release v5.34.20 or greater. ",
            "section": "Public release",
            "paragraph_rank": 139,
            "section_rank": 36,
            "ref_spans": [
                {
                    "start": 54,
                    "end": 56,
                    "type": "bibr",
                    "ref_id": "b9",
                    "text": "11"
                }
            ],
            "entity_spans": [
                {
                    "start": 15,
                    "end": 23,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w42"
                },
                {
                    "start": 24,
                    "end": 31,
                    "type": "software",
                    "rawForm": "package",
                    "resp": "whitelist",
                    "id": "software-simple-w43"
                },
                {
                    "start": 120,
                    "end": 124,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w44"
                }
            ]
        },
        {
            "text": "The web-page contains a description of the source code, a tutorial on how to set up an analysis, and working examples of how to run and use the code.",
            "section": "Public release",
            "paragraph_rank": 139,
            "section_rank": 36
        },
        {
            "text": "Fig. 1 A",
            "section_rank": 37
        },
        {
            "text": "Fig. 1A schematic view of an analysis strategy with multiple control, validation and signal regions. ",
            "section": "Fig. 1 A",
            "paragraph_rank": 140,
            "section_rank": 37
        },
        {
            "text": "All regions can have single-or multiple bins, as illustrated by the dashed lines. ",
            "section": "Fig. 1 A",
            "paragraph_rank": 140,
            "section_rank": 37
        },
        {
            "text": "The extrapolation from the control to the signal regions is verified in the validation regions that lie in the extrapolation phase space",
            "section": "Fig. 1 A",
            "paragraph_rank": 140,
            "section_rank": 37
        },
        {
            "text": "Fig. 2",
            "section_rank": 38
        },
        {
            "text": "Fig. 2 Overview of a typical analysis strategy flow with HistFitter",
            "section": "Fig. 2",
            "paragraph_rank": 141,
            "section_rank": 38
        },
        {
            "text": "Fig. 4 Fig. 5",
            "section_rank": 39
        },
        {
            "text": "Fig. 4 Illustration of a fit configuration in HistFitter. ",
            "section": "Fig. 4 Fig. 5",
            "paragraph_rank": 142,
            "section_rank": 39
        },
        {
            "text": "Each fitConfig instance defines a PDF built from a list of channel (i.e. CR, SR or VR), sample and systematic objects. ",
            "section": "Fig. 4 Fig. 5",
            "paragraph_rank": 142,
            "section_rank": 39
        },
        {
            "text": "Each channel owns a list of samples and",
            "section": "Fig. 4 Fig. 5",
            "paragraph_rank": 142,
            "section_rank": 39
        },
        {
            "text": "Fig.",
            "section_rank": 40
        },
        {
            "text": "Fig. An overview of the various PDFs HistFitter uses internally, together with their typical use. ",
            "section": "Fig.",
            "paragraph_rank": 143,
            "section_rank": 40
        },
        {
            "text": "The large PDF for all regions is automatically deconstructed into separate, smaller ones defined on those subsets of regions depending on the fit and/or statistical test performed. ",
            "section": "Fig.",
            "paragraph_rank": 143,
            "section_rank": 40
        },
        {
            "text": "The PDFs are indicated as rounded squares, and the fit configurations as squares",
            "section": "Fig.",
            "paragraph_rank": 143,
            "section_rank": 40
        },
        {
            "text": "Fig. 7",
            "section_rank": 41
        },
        {
            "text": "Fig. 7 Example produced by the ATLAS collaboration and taken from Ref. ",
            "section": "Fig. 7",
            "paragraph_rank": 144,
            "section_rank": 41
        },
        {
            "text": "[2]. ",
            "section": "Fig. 7",
            "paragraph_rank": 144,
            "section_rank": 41
        },
        {
            "text": "Distribution of missing transverse momentum in the single lepton W +jets control region before (top) and after (bottom) the final fit to all background control regions",
            "section": "Fig. 7",
            "paragraph_rank": 144,
            "section_rank": 41
        },
        {
            "text": "Overview of the HistFitter processing sequence. ",
            "paragraph_rank": 145,
            "section_rank": 42
        },
        {
            "text": "Each column, separated by the dashed vertical lines, represents a step in the HistFitter processing sequence, and each row is a fit configuration. ",
            "paragraph_rank": 145,
            "section_rank": 42
        },
        {
            "text": "See the text for a description",
            "paragraph_rank": 145,
            "section_rank": 42
        },
        {
            "text": "Table 1",
            "section_rank": 43
        },
        {
            "text": "Sub-set of the systematic methods available in HistFitter. ",
            "section": "Table 1",
            "paragraph_rank": 146,
            "section_rank": 43
        },
        {
            "text": "The methods are specified by a string argument containing a combination of basic HistFactory methods and optional HistFitter keywords: norm, OneSide and/or Sym. ",
            "section": "Table 1",
            "paragraph_rank": 146,
            "section_rank": 43
        },
        {
            "text": "Uncertainty of the global normalization, not affecting the shape histoSys Correlated uncertainty of shape and normalization shapeSys Uncertainty of statistical nature applied to a sum of samples, bin by bin Additional systematic methods in HistFitter",
            "section": "Table 1",
            "paragraph_rank": 146,
            "section_rank": 43
        },
        {
            "text": "where myTreeSys and myWeightSys rely on the treebased and weight-based methods. ",
            "section": "Table 1",
            "paragraph_rank": 147,
            "section_rank": 43
        },
        {
            "text": "myUserSys relies on the Float input discussed above, and, in this example, has asymmetric up and down input uncertainty values of 10 and 20 %. ",
            "section": "Table 1",
            "paragraph_rank": 147,
            "section_rank": 43,
            "entity_spans": [
                {
                    "start": 24,
                    "end": 29,
                    "type": "software",
                    "rawForm": "Float",
                    "resp": "whitelist",
                    "id": "software-simple-w45"
                }
            ]
        },
        {
            "text": "The last argument myMethods is discussed below. ",
            "section": "Table 1",
            "paragraph_rank": 147,
            "section_rank": 43
        },
        {
            "text": "Systematic objects are then associated to Sample or Channel objects with: mySample.addSystematic(mySys) myChannel.addSystematic(mySys)",
            "section": "Table 1",
            "paragraph_rank": 147,
            "section_rank": 43,
            "entity_spans": [
                {
                    "start": 52,
                    "end": 59,
                    "type": "software",
                    "rawForm": "Channel",
                    "resp": "whitelist",
                    "id": "software-simple-w46"
                }
            ]
        },
        {
            "text": "Table 2",
            "section_rank": 44
        },
        {
            "text": "Summary of the fit strategies supported in HistFitter, as described in the text",
            "section": "Table 2",
            "paragraph_rank": 148,
            "section_rank": 44
        },
        {
            "text": "Table 3",
            "section_rank": 45
        },
        {
            "text": "Example produced by the ATLAS collaboration and taken from Ref.",
            "section": "Table 3",
            "paragraph_rank": 149,
            "section_rank": 45
        },
        {
            "text": "[3]. ",
            "section": "Table 3",
            "paragraph_rank": 149,
            "section_rank": 45,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 3,
                    "type": "bibr",
                    "ref_id": "b1",
                    "text": "[3]"
                }
            ]
        },
        {
            "text": "Illustration of observed numbers of events in data and fitted background components in each SR, as obtained from a backgroundonly fit to CRs. ",
            "section": "Table 3",
            "paragraph_rank": 149,
            "section_rank": 45
        },
        {
            "text": "For the total background estimates, the quoted uncer-tainties give the statistical (MC simulation and CR combined) and systematic uncertainties respectively. ",
            "section": "Table 3",
            "paragraph_rank": 149,
            "section_rank": 45
        },
        {
            "text": "For the individual background components, the total uncertainties are given, while the values in parenthesis indicate the pre-fit predictions",
            "section": "Table 3",
            "paragraph_rank": 149,
            "section_rank": 45
        },
        {
            "text": "Also referred to as \"regressions\" in the literature.",
            "section": "Table 3",
            "paragraph_rank": 150,
            "section_rank": 45
        },
        {
            "text": "In statistics, a parametric model is a family of distributions that can be described using a finite number of parameters.",
            "section": "Table 3",
            "paragraph_rank": 151,
            "section_rank": 45
        },
        {
            "text": "Supported test statistics are: a maximum likelihood estimate of the parameter of interest, a simple likelihood ratio \u22122 log(L(\u03bc,\u03b8)/L(0,\u03b8)), as used by the LEP collaborations, a ratio of profile likelihoods \u22122 log(L(\u03bc,\u03b8)/L(0,\u03b8)), as used by the Tevatron collaborations, or a profile likelihood ratio \u22122 log(L(\u03bc,\u03b8)/L(\u03bc,\u03b8)), as used by the LHC collaborations. ",
            "section": "Table 3",
            "paragraph_rank": 152,
            "section_rank": 45
        },
        {
            "text": "The hypothesis tests can be evaluated as one-or two-sided. ",
            "section": "Table 3",
            "paragraph_rank": 152,
            "section_rank": 45
        },
        {
            "text": "The sampling of the test statistics is done either with a Bayesian, Frequentist, or a hybrid calculator[24].",
            "section": "Table 3",
            "paragraph_rank": 152,
            "section_rank": 45,
            "ref_spans": [
                {
                    "start": 103,
                    "end": 107,
                    "type": "bibr",
                    "ref_id": "b21",
                    "text": "[24]"
                }
            ]
        },
        {
            "text": "This is sometimes referred to as a \"cut-and-count\" experiment in the literature.",
            "section": "Table 3",
            "paragraph_rank": 153,
            "section_rank": 45
        },
        {
            "text": "Other nomenclature (but deemed confusing) for the model-dependent and model-independent signal fit are \"exclusion fit\" and \"discovery fit\" respectively.",
            "section": "Table 3",
            "paragraph_rank": 154,
            "section_rank": 45
        },
        {
            "text": "Sometimes confusingly called \"unblinded\" background-level estimates.7 ",
            "section": "Table 3",
            "paragraph_rank": 155,
            "section_rank": 45,
            "ref_spans": [
                {
                    "start": 68,
                    "end": 69,
                    "type": "bibr",
                    "ref_id": "b5",
                    "text": "7"
                }
            ]
        },
        {
            "text": "Both the addition of simultaneous SRs and of shape information in these SRs will make an analysis more versatile. ",
            "section": "Table 3",
            "paragraph_rank": 155,
            "section_rank": 45
        },
        {
            "text": "Since the shape of signals models over multiple bins or multiple SRs will in general be different from the background prediction, in doing so the fit has gained separation power to distinguish the two. ",
            "section": "Table 3",
            "paragraph_rank": 155,
            "section_rank": 45
        },
        {
            "text": "In particular, the sensitivity to signal models not considered in the optimization of the SRs is often retained.",
            "section": "Table 3",
            "paragraph_rank": 155,
            "section_rank": 45
        },
        {
            "text": "The background-only fit estimates are sometimes called \"blinded\" background estimates, as the SR(s) and VR(s) are not included in the fit.",
            "section": "Table 3",
            "paragraph_rank": 156,
            "section_rank": 45
        },
        {
            "text": "Note that the maximization of the likelihood function forces the need for continuous and smooth parametric models to describe the signal and background processes present in the data.10 ",
            "section": "Table 3",
            "paragraph_rank": 157,
            "section_rank": 45,
            "ref_spans": [
                {
                    "start": 182,
                    "end": 184,
                    "type": "bibr",
                    "ref_id": "b8",
                    "text": "10"
                }
            ]
        },
        {
            "text": "Equal to taking the median and width of a collection of pseudo experiments, see discussion in Ref.",
            "section": "Table 3",
            "paragraph_rank": 157,
            "section_rank": 45
        },
        {
            "text": "[29].",
            "section": "Table 3",
            "paragraph_rank": 157,
            "section_rank": 45,
            "ref_spans": [
                {
                    "start": 0,
                    "end": 4,
                    "type": "bibr",
                    "ref_id": "b26",
                    "text": "[29]"
                }
            ]
        },
        {
            "text": "Support is provided on a best-effort basis.",
            "section": "Table 3",
            "paragraph_rank": 158,
            "section_rank": 45
        },
        {
            "text": "Page 20 of 20 Eur. ",
            "section": "Table 3",
            "paragraph_rank": 159,
            "section_rank": 45
        },
        {
            "text": "Phys. ",
            "section": "Table 3",
            "paragraph_rank": 159,
            "section_rank": 45
        },
        {
            "text": "J. C (2015) 75 :153",
            "section": "Table 3",
            "paragraph_rank": 159,
            "section_rank": 45
        },
        {
            "text": "Acknowledgments",
            "section_rank": 47
        },
        {
            "text": "We are grateful to the RooFit, RooStats, and HistFactory authors for a fruitful collaboration and useful feedback, in particular to Kyle Cranmer, Lorenzo Moneta and Wouter Verkerke. ",
            "section": "Acknowledgments",
            "paragraph_rank": 160,
            "section_rank": 47
        },
        {
            "text": "We thank our ATLAS colleagues for permission to reproduce the published figures and tables in Sects. ",
            "section": "Acknowledgments",
            "paragraph_rank": 160,
            "section_rank": 47
        },
        {
            "text": "6 and 7 to illustrate the HistFitter tools discussed. ",
            "section": "Acknowledgments",
            "paragraph_rank": 160,
            "section_rank": 47
        },
        {
            "text": "We also thank the ATLAS collaboration and its SUSY physics group for useful discussions and suggestions for the development of HistFitter, and in particular thank Monica D'Onofrio and Jamie Boyd for their feedback on this paper. ",
            "section": "Acknowledgments",
            "paragraph_rank": 160,
            "section_rank": 47
        },
        {
            "text": "And we are specifically grateful to following members of the ATLAS SUSY physics group for their support and contributions to HistFitter: Andreas Hoecker, Till Eifert, Zachary Marshall, Emma Sian Kuwertz, Evgeny Khramov, Sophio Pataraia and Marcello Barisonzi. ",
            "section": "Acknowledgments",
            "paragraph_rank": 160,
            "section_rank": 47
        },
        {
            "text": "This work was supported by CERN, Switzerland; the DFG cluster of excellence \"Origin and Structure of",
            "section": "Acknowledgments",
            "paragraph_rank": 160,
            "section_rank": 47,
            "entity_spans": [
                {
                    "start": 33,
                    "end": 44,
                    "type": "software",
                    "rawForm": "Switzerland",
                    "resp": "whitelist",
                    "id": "software-simple-w47"
                },
                {
                    "start": 77,
                    "end": 83,
                    "type": "software",
                    "rawForm": "Origin",
                    "resp": "whitelist",
                    "id": "software-simple-w48"
                }
            ]
        },
        {
            "text": "Conclusion",
            "section_rank": 49
        },
        {
            "text": "We have presented a software framework for statistical data analysis, called HistFitter, that has been used extensively by the ATLAS Collaboration to analyze big datasets originating from proton-proton collisions at the LHC at CERN.",
            "section": "Conclusion",
            "paragraph_rank": 161,
            "section_rank": 49,
            "entity_spans": [
                {
                    "start": 20,
                    "end": 28,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w49"
                }
            ]
        },
        {
            "text": "HistFitter provides a programmable framework to build and test a set of data models of nearly arbitrary complexity. ",
            "section": "Conclusion",
            "paragraph_rank": 162,
            "section_rank": 49
        },
        {
            "text": "Starting from an input configuration, defined by users, it uses the software packages HistFactory, RooStats, RooFit and ROOT to construct PDFs that are fitted to data and interpreted with statistical tests, automatically.",
            "section": "Conclusion",
            "paragraph_rank": 162,
            "section_rank": 49,
            "entity_spans": [
                {
                    "start": 68,
                    "end": 76,
                    "type": "software",
                    "rawForm": "software",
                    "resp": "whitelist",
                    "id": "software-simple-w50"
                },
                {
                    "start": 120,
                    "end": 124,
                    "type": "software",
                    "rawForm": "ROOT",
                    "resp": "whitelist",
                    "id": "software-simple-w51"
                }
            ]
        },
        {
            "text": "HistFitter brings forth several innovative features. ",
            "section": "Conclusion",
            "paragraph_rank": 163,
            "section_rank": 49
        },
        {
            "text": "It provides a modular configuration interface with a trickle-down mechanism that is very efficient and intuitive for users. ",
            "section": "Conclusion",
            "paragraph_rank": 163,
            "section_rank": 49
        },
        {
            "text": "It has built-in concepts of control, signal and validation regions, with rigorous statistical treatment, tailored to support a complete particle physics analysis. ",
            "section": "Conclusion",
            "paragraph_rank": 163,
            "section_rank": 49
        },
        {
            "text": "It is capable of working with multiple data models at once, which introduces an additional level of abstraction that is powerful when searching for new phenomena in large experimental datasets. ",
            "section": "Conclusion",
            "paragraph_rank": 163,
            "section_rank": 49
        },
        {
            "text": "Finally, HistFitter provides a sizable collection of tools and options, resulting from experience gained during real-life analysis of ATLAS Run-1 data, that allows, through simple commandline commands, the presentation of results with publicationstyle quality.",
            "section": "Conclusion",
            "paragraph_rank": 163,
            "section_rank": 49
        }
    ]
}
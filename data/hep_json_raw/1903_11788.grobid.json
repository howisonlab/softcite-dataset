{
    "level": "paragraph",
    "abstract": [
        {
            "text": "We propose a way to simulate Cherenkov detector response using a generative adversarial neural network to bypass low-level details. This network is trained to reproduce high level features of the simulated detector events based on input observables of incident particles. This allows the dramatic increase of simulation speed. We demonstrate that this approach provides simulation precision which is consistent with the baseline and discuss possible implications of these results.",
            "paragraph_rank": 1,
            "section_rank": 1
        }
    ],
    "body_text": [
        {
            "text": "Introduction",
            "section_rank": 2
        },
        {
            "section": "Introduction",
            "text": "New runs of the Large Hadron Collider and next generation of colliding experiments with increased luminosity will require an unprecedented amount of simulated events to be produced. This would bring an extreme challenge to the computing resources. Thus new approaches to events generation and simulation of detector responses are needed. Cherenkov detectors, being relatively slow to simulate, are well suited for applying recent approaches to fast simulation. Until recently, the most popular approaches were tabulated response [1] and parameterization of detector response [2]. While both approaches produce valuable results, they require a significant effort at each retuning. That is why a new way to parameterize the detector response needs to be introduced. This way can be paved using a modern day machine learning tools. The most common approach used now is Generative adversarial neural networks (GANs) [3], while variational autoencoders can also be used [4]. This paper present the first attempt to parameterize a Cherenkov detector response using GANs.",
            "paragraph_rank": 2,
            "section_rank": 2,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b0",
                    "start": 529,
                    "text": "[1]",
                    "end": 532
                },
                {
                    "type": "bibr",
                    "ref_id": "b1",
                    "start": 575,
                    "text": "[2]",
                    "end": 578
                },
                {
                    "type": "bibr",
                    "ref_id": "b2",
                    "start": 912,
                    "text": "[3]",
                    "end": 915
                },
                {
                    "type": "bibr",
                    "ref_id": "b3",
                    "start": 965,
                    "text": "[4]",
                    "end": 968
                }
            ]
        },
        {
            "text": "Fast Simulation Method",
            "section_rank": 3
        },
        {
            "section": "Fast Simulation Method",
            "text": "GANs provide a rule to connect input observables with distributions of output ones [3]. A first attempt to apply the GAN to fast simulation in physics analyses was performed recently in [5]. This attempt used a Geant4 generated calorimeter response as a training sample with the aim to mimic the low-level detector response.",
            "paragraph_rank": 3,
            "section_rank": 3,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b2",
                    "start": 83,
                    "text": "[3]",
                    "end": 86
                },
                {
                    "type": "bibr",
                    "ref_id": "b4",
                    "start": 186,
                    "text": "[5]",
                    "end": 189
                }
            ]
        },
        {
            "section": "Fast Simulation Method",
            "text": "Our model instead concentrates on the high-level observables reconstruction, thus, effectively bypassing the photon generation stage. This allows us to concentrate on the quality of simulation in terms of the observables used in further analysis.",
            "paragraph_rank": 4,
            "section_rank": 3
        },
        {
            "section": "Fast Simulation Method",
            "text": "Various divergences can be minimised when training GANs. We find that the Wasserstein GAN [6] that has already been explored in the context of HEP shows good behaviour. The distance can be written as a Kantorovich-Rubinstein dual representation [7]:",
            "paragraph_rank": 5,
            "section_rank": 3,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b5",
                    "start": 90,
                    "text": "[6]",
                    "end": 93
                },
                {
                    "type": "bibr",
                    "ref_id": "b6",
                    "start": 245,
                    "text": "[7]",
                    "end": 248
                }
            ]
        },
        {
            "section": "Fast Simulation Method",
            "text": "here p \u03b8 is the optimised parametric distribution, p r is the empirical distribution. f is an element of 1-Lipshitz function space. This condition allows us to construct a faster converging and more reliable local operator, with f that can be approximated by a sufficiently complex neural network. However, we also find that the best solution is a Cramer GAN [8], which provides unbiased gradients leading to a better fidelity in reproducing distributions. The metrics can also be written out in form of a dual representation (1), exchanging f (x) to a specific form described in [8].",
            "paragraph_rank": 6,
            "section_rank": 3,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b7",
                    "start": 359,
                    "text": "[8]",
                    "end": 362
                },
                {
                    "type": "bibr",
                    "ref_id": "b7",
                    "start": 580,
                    "text": "[8]",
                    "end": 583
                }
            ]
        },
        {
            "text": "Input data Sample",
            "section_rank": 4
        },
        {
            "section": "Input data Sample",
            "text": "As a source of reliable simulated events, we used the Fast-DIRC [9] simulation of the Detector of Internally Reflected Cherenkov light. This detector was first used by the BaBar experiment [10] and now is going to be introduced in the GlueX [11] experiment. The generation is two-fold: in the first stage a sufficient amount of the photons are generated; in the second stage a kernel density estimation is used to produce the likelihood for particle identification. The biggest problem of the fast simulation is expected to come from the interference of two adjacent particles. That is why we modified the code in order to test multiparticle events. We simulate tracks sampling a flat distribution in pseudorapidity between -1.5 and 1.  greater than 2.5 GeV. We also update the code adding an additional \"background\" particle in each event. In the following, the sample generated by the FastDIRC package is referred to as \"FastDIRC\", our model results is referred to as \"GAN\".",
            "paragraph_rank": 7,
            "section_rank": 4,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b8",
                    "start": 64,
                    "text": "[9]",
                    "end": 67
                },
                {
                    "type": "bibr",
                    "ref_id": "b9",
                    "start": 189,
                    "text": "[10]",
                    "end": 193
                },
                {
                    "type": "bibr",
                    "ref_id": "b10",
                    "start": 241,
                    "text": "[11]",
                    "end": 245
                }
            ]
        },
        {
            "text": "Model Study",
            "section_rank": 5
        },
        {
            "section": "Model Study",
            "text": "We construct a neural network for each particle species that takes signal kinematic observables along with a distance to the closest adjacent particle and train it to predict the multidimensional distribution of the likelihoods produced by FastDirc.",
            "paragraph_rank": 8,
            "section_rank": 5
        },
        {
            "section": "Model Study",
            "text": "The amount of input observables and the architecture of the neural network was optimised to obtain a subpercent quality of the prediction. The final architecture design is a 10-denselayers neural network, each containing 128 neurons. The model was trained using 1 million generated events. Here, the input observables used are the full kinematics of event: energy, pseudorapidity and the distance between the particle track and DIRC bar side of signal particle. We trained a separate model for each signal particle type. We transformed each observable distribution into a normal one using quantile transformation before passing them to neural network",
            "paragraph_rank": 9,
            "section_rank": 5
        },
        {
            "section": "Model Study",
            "text": "We first check that the predictions are consistent with our expectations for one particle tests: we check one-and multidimensional distributions of the output likelihoods in order to understand, whether they are consistent with the output of Fast-DIRC. We find the histograms to be in a good agreement. An example of the plots is shown in Fig. 1.",
            "paragraph_rank": 10,
            "section_rank": 5,
            "ref_spans": [
                {
                    "type": "figure",
                    "ref_id": "fig_0",
                    "start": 339,
                    "text": "Fig. 1",
                    "end": 345
                }
            ]
        },
        {
            "section": "Model Study",
            "text": "One of the main possible problem of high level observables generation is their interaction with other particles. We take the influence into account by adding an information about the kinematics of the background particle into input observables list. This information is checked to bring the maximum needed quality to the model. In general, this information can be removed if the quality is sufficient.",
            "paragraph_rank": 11,
            "section_rank": 5
        },
        {
            "section": "Model Study",
            "text": "We then study the dependence of the generation bias on the closest neighbouring track position. We check this in bins of the kinematic observables for signal and neighbouring particle. In each bin we calculate the separation power between two signal particle species, pions and kaons. We characterise the separation power using area under receiver operating characteristic (ROC AUC). This is done both for likelihoods generated by FastDIRC and our GAN. The test is considered successful if the difference between AUCs generated by different methods is small. The results are shown in Fig. 2. We conclude that the closest neighbour information inserted is sufficient to overcome the problem. The obtained generation model is lightweight. The speed improvement with respect to full simulation in GEANT [12] is 8 \u2022 10 4 times on a single CPU core. The speed is also improved with respect to the FastDIRC generation, where a factor up to 80 can be achieved. The batch generation on GPU produces up to 1 million track predictions per second.",
            "paragraph_rank": 12,
            "section_rank": 5,
            "ref_spans": [
                {
                    "type": "figure",
                    "ref_id": "fig_1",
                    "start": 584,
                    "text": "Fig. 2",
                    "end": 590
                },
                {
                    "type": "bibr",
                    "ref_id": "b11",
                    "start": 800,
                    "text": "[12]",
                    "end": 804
                }
            ]
        },
        {
            "text": "Conclusion",
            "section_rank": 6
        },
        {
            "section": "Conclusion",
            "text": "We present a novel approach of the fast simulation of Cherenkov detectors. This approach is based on the generative adversarial neural networks and is gives a good precision, while being very fast.",
            "paragraph_rank": 13,
            "section_rank": 6
        },
        {
            "text": "Figure 1 :",
            "section_rank": 7
        },
        {
            "section": "Figure 1 :",
            "text": "Figure 1: Left: An example of 1D projection to kaon delta log-likelihood observables for FastDIRC and GAN simulation for samples consisting true pions (blue) and true kaons (brown). Center and Right: An example of 2D projection to kaon and proton delta log-likelihood observables for FastDIRC (left) and GAN (right) simulation. The sample made of true pion.",
            "paragraph_rank": 14,
            "section_rank": 7
        },
        {
            "text": "Figure 2 :",
            "section_rank": 8
        },
        {
            "section": "Figure 2 :",
            "text": "Figure 2: Separation power between kaons and pions measured in area under receiver operating characteristic curve score (AUC score). Left is the FastDIRC simulation, right is the difference between GAN and FastDIRC AUC scores. The statistical uncertainty is around 0.005.",
            "paragraph_rank": 15,
            "section_rank": 8
        },
        {
            "text": "Acknowledgments",
            "section_rank": 10
        },
        {
            "section": "Acknowledgments",
            "text": "The research leading to these results has received funding from the Russian Science Foundation under grant agreement n 17-72-20127.",
            "paragraph_rank": 16,
            "section_rank": 10
        }
    ]
}
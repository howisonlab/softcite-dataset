{
    "level": "paragraph",
    "abstract": [
        {
            "text": "The incomplete particle identification limits the experimentally-available phase space region for identified particle analysis. This problem affects ongoing fluctuation and correlation studies including the search for the critical point of strongly interacting matter performed on SPS and RHIC accelerators. In this paper we provide a procedure to obtain nth order moments of the multiplicity distribution using the identity method, generalising previously published solutions for n = 2 and n = 3. Moreover, we present an open source software implementation of this computation, called Idhim, that allows one to obtain the true moments of identified particle multiplicity distributions from the measured ones provided the response function of the detector is known.",
            "paragraph_rank": 2,
            "section_rank": 1
        }
    ],
    "body_text": [
        {
            "text": "Introduction",
            "section_rank": 2
        },
        {
            "section": "Introduction",
            "text": "Search for the critical point of strongly interacting matter remains one of the most important goals of experimental searches in heavy ion physics [1,2]. Its basic property -the increase of the correlation length of the considered system -forces experimenters to shift their interests from inclusive spectra to higher-order moments and cumulants of the particle multiplicity distributions. A particular interest is paid towards net-proton fluctuations being the most sensitive to the searched phenomenon [3].",
            "paragraph_rank": 3,
            "section_rank": 2,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b0",
                    "start": 147,
                    "text": "[1,",
                    "end": 150
                },
                {
                    "type": "bibr",
                    "ref_id": "b1",
                    "start": 150,
                    "text": "2]",
                    "end": 152
                },
                {
                    "type": "bibr",
                    "ref_id": "b2",
                    "start": 504,
                    "text": "[3]",
                    "end": 507
                }
            ]
        },
        {
            "section": "Introduction",
            "text": "One of the most serious experimental issues, which largely limits the available phase-space coverage, and, possibly, affects the studied signal, is the incomplete particle identification caused by finite detector resolution. To overcome this problem an experimental technique, called the identity method, was proposed in Ref. [4], and extended in Refs. [5][6][7]. So far the identity method was described for the seca e-mail: majam@if.pw.edu.pl ond [5] and third [6] order moments. In Ref. [6] it was also used to reexamine the first moments of the identified particle distributions. The impact of particle losses due to detector inefficiencies on results from the identity method is discussed in Ref. [7]. The author shows that it remains applicable provided detection efficiencies can be determined with sufficient accuracy. With the ongoing development of theoretical studies concerning higher order moments it seems appropriate to extend experimental techniques and tools as well.",
            "paragraph_rank": 4,
            "section_rank": 2,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b3",
                    "start": 326,
                    "text": "[4]",
                    "end": 329
                },
                {
                    "type": "bibr",
                    "ref_id": "b4",
                    "start": 353,
                    "text": "[5]",
                    "end": 356
                },
                {
                    "type": "bibr",
                    "ref_id": "b5",
                    "start": 356,
                    "text": "[6]",
                    "end": 359
                },
                {
                    "type": "bibr",
                    "ref_id": "b6",
                    "start": 359,
                    "text": "[7]",
                    "end": 362
                },
                {
                    "type": "bibr",
                    "ref_id": "b4",
                    "start": 449,
                    "text": "[5]",
                    "end": 452
                },
                {
                    "type": "bibr",
                    "ref_id": "b5",
                    "start": 463,
                    "text": "[6]",
                    "end": 466
                },
                {
                    "type": "bibr",
                    "ref_id": "b5",
                    "start": 490,
                    "text": "[6]",
                    "end": 493
                },
                {
                    "type": "bibr",
                    "ref_id": "b6",
                    "start": 702,
                    "text": "[7]",
                    "end": 705
                }
            ]
        },
        {
            "section": "Introduction",
            "text": "In the present study the identity method is extended in two ways. Firstly, a strict procedure to obtain nth order moments of the multiplicity distribution is shown. Secondly, a program, called Idhim, which performs such calculations for any given number of considered particle types, is presented. It also allows one to obtain moments up to any order provided the detector response function is known. The modification of first moments from Ref. [6], also included in Idhim, may address possible biases in other popular methods [8] (e.g. maximal likelihood method [9,10]).",
            "paragraph_rank": 5,
            "section_rank": 2,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b5",
                    "start": 445,
                    "text": "[6]",
                    "end": 448
                },
                {
                    "type": "bibr",
                    "ref_id": "b7",
                    "start": 527,
                    "text": "[8]",
                    "end": 530
                },
                {
                    "type": "bibr",
                    "ref_id": "b8",
                    "start": 563,
                    "text": "[9,",
                    "end": 566
                },
                {
                    "type": "bibr",
                    "ref_id": "b9",
                    "start": 566,
                    "text": "10]",
                    "end": 569
                }
            ]
        },
        {
            "section": "Introduction",
            "text": "The paper is organized as follows. In Sect. 2, basic quantities of the identity method are presented. The computation of nth moments of true multiplicity distribution is shown in Sect. 3. Modifications necessary to apply the general formulas in practice are addressed in Sect. 4. Description of the Idhim program which computes moments of the true multiplicity distribution is given in Sect. 5. Section 6 contains tests of the program with the detector response close to the ones measured in real experiments. Conclusion in Sect. 7 ends the paper.",
            "paragraph_rank": 6,
            "section_rank": 2
        },
        {
            "text": "Basic quantities",
            "section_rank": 3
        },
        {
            "section": "Basic quantities",
            "text": "The identity method is developed under the assumption that particles are identified by measuring quantity x (e.g., a mass) of observed particles. Due to the finite detector resolution one gets a continuous distribution for x, denoted by \u03c1 j (x), where index j stands for one of k particle types. The density is expected to sum up to the mean of N j , i.e., the multiplicity for this type:",
            "paragraph_rank": 7,
            "section_rank": 3
        },
        {
            "section": "Basic quantities",
            "text": "For a given particle observation, its conditional probability of being of a given type is expressed by a quantity called identity, defined as:",
            "paragraph_rank": 8,
            "section_rank": 3
        },
        {
            "section": "Basic quantities",
            "text": "In the case of complete particle identification w j is reduced to two extreme values: w j = 0 for particles of types other than j and w j = 1 for particles of type j.",
            "paragraph_rank": 9,
            "section_rank": 3
        },
        {
            "section": "Basic quantities",
            "text": "In the same way, one can define an aggregated quantity for a given particle type:",
            "paragraph_rank": 10,
            "section_rank": 3
        },
        {
            "section": "Basic quantities",
            "text": "where N (\u03bd) is the total multiplicity (including all particle types) of the \u03bdth of considered N ev events. From these events one obtains the distribution of different types of W with its moments defined as",
            "paragraph_rank": 11,
            "section_rank": 3
        },
        {
            "section": "Basic quantities",
            "text": "where n j denotes the order of the moment of the distribution of W j .",
            "paragraph_rank": 12,
            "section_rank": 3
        },
        {
            "text": "Computing the nth moments of multiplicity distribution",
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "We will now show how one can compute all the nth moments of the multiplicity distribution",
            "paragraph_rank": 13,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "n using the moments of the measured identity variables. The procedure will be a generalisation of those published for n = 2 [5] and n = 3 [6]. First, we shall demonstrate how the value of a moment of identity variables",
            "paragraph_rank": 14,
            "section_rank": 4,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b4",
                    "start": 124,
                    "text": "[5]",
                    "end": 127
                },
                {
                    "type": "bibr",
                    "ref_id": "b5",
                    "start": 138,
                    "text": "[6]",
                    "end": 141
                }
            ]
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": ", depends on the multiplicity distribution. We have the following:",
            "paragraph_rank": 15,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "where",
            "paragraph_rank": 16,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "is the multiplicity distribution, i.e., the probability of observing N 1 particles of the first time, N 2 particles of the second type and so forth, and",
            "paragraph_rank": 17,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "is the probability distribution of the jth type. Let us firstly focus on the innermost part of Eq. 5, denoted hereafter by \u03c9:",
            "paragraph_rank": 18,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "We will now use the multinomial theorem to expand the n l th power. Let us first define the following notation for brevity:",
            "paragraph_rank": 19,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "In this notation the multinomial theorem is represented by",
            "paragraph_rank": 20,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "which allows us to express \u03c9 as",
            "paragraph_rank": 21,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "where the first summation is over all possible combinations of k nonnegative integers \u03b7 1 (l) , . . . , \u03b7 k (l) that sum up to n l . Let us now use the multinomial theorem again, this time to expand the \u03b7 j (l) th power:",
            "paragraph_rank": 22,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "This formulation could be rearranged to give k) . 11If we now put \u03c9 expressed in such way back to Eq. 5, we can notice that integration over x j i can be applied to the product",
            "paragraph_rank": 23,
            "section_rank": 4,
            "ref_spans": [
                {
                    "type": "bibr",
                    "start": 45,
                    "text": "k)",
                    "end": 47
                },
                {
                    "start": 50,
                    "text": "11",
                    "end": 52
                }
            ]
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": ". . .",
            "paragraph_rank": 24,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "where function u j is defined as",
            "paragraph_rank": 25,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "Let us now focus on the part of Eq. 12 depending on j, which will be denoted by \u03bb j ,",
            "paragraph_rank": 26,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "Since each u j depends on a tuple of values of length k, it is convenient to introduce a notation for such tuples:",
            "paragraph_rank": 27,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "This allows us to express \u03bb j as",
            "paragraph_rank": 28,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "where the first summation is over all ",
            "paragraph_rank": 29,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "If we use this to compute \u03bb j , we get",
            "paragraph_rank": 30,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "where a * b means that the value b appears a times in the multinomial symbol. The indicator variable is necessary so that in the case of \u03b7 j = 0, we have \u03bb j = 1, as in Eq. 16.",
            "paragraph_rank": 31,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "If we now focus on the multinomial symbol involving N j , it can be expanded as",
            "paragraph_rank": 32,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "We can see it is a polynomial of N j of degree",
            "paragraph_rank": 33,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": ", which is at least 1 and at most \u03b7",
            "paragraph_rank": 34,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": ". Since \u03bb j is a weighted sum of such polynomials (and indicator variable), it is a polynomial of N j of at most the same degree and can therefore be expressed as",
            "paragraph_rank": 35,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "Further coefficients, i.e., \u03bb j p for p > \u03b7 j \u03a3 , equal zero. Let us put this formulation of \u03bb j back to Eq. 12. This gives us",
            "paragraph_rank": 36,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "We can rearrange it as",
            "paragraph_rank": 37,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "which finally gives us",
            "paragraph_rank": 38,
            "section_rank": 4
        },
        {
            "section": "Computing the nth moments of multiplicity distribution",
            "text": "Since k j=1 \u03b7 j \u03a3 = n 1 + n 2 + \u2022 \u2022 \u2022 + n k = n, the order of the moments at the right hand side is at most equal n. We have therefore just shown how to express any moment of W distributions with order n as a sum of moments of N distributions with order \u2264 n. Since this dependency is linear, we can define the whole problem as a set of linear equations.",
            "paragraph_rank": 39,
            "section_rank": 4
        },
        {
            "text": "It will have the coefficients",
            "section_rank": 5
        },
        {
            "section": "It will have the coefficients",
            "text": "where",
            "paragraph_rank": 40,
            "section_rank": 5
        },
        {
            "section": "It will have the coefficients",
            "text": "We also need to define elements which will take into account the contribution of moments of N with orders lower than n:",
            "paragraph_rank": 41,
            "section_rank": 5
        },
        {
            "section": "It will have the coefficients",
            "text": "To arrange the moments in a linear order, let us now choose any one-to-one function f from sequences of length k summing up to n to numbers 1, 2, . . . , n+k\u22121 k\u22121 . We can use it to construct a matrix A having elements A \u03be,\u03b6 = a",
            "paragraph_rank": 42,
            "section_rank": 5
        },
        {
            "section": "It will have the coefficients",
            "text": "We can also arrange unknown moments in a vector N such that",
            "paragraph_rank": 43,
            "section_rank": 5
        },
        {
            "section": "It will have the coefficients",
            "text": "k . This allows us to express equation 23 as",
            "paragraph_rank": 44,
            "section_rank": 5
        },
        {
            "section": "It will have the coefficients",
            "text": "or in matrix notation:",
            "paragraph_rank": 45,
            "section_rank": 5
        },
        {
            "section": "It will have the coefficients",
            "text": "If detA = 0, the moment we are looking for can be computed as",
            "paragraph_rank": 46,
            "section_rank": 5
        },
        {
            "text": "Modifications",
            "section_rank": 6
        },
        {
            "section": "Modifications",
            "text": "In the previous section we have shown the procedure to compute the nth moments of the multiplicity distribution as a generalisation of the computations for n = 2 and n = 3, but to apply it in practice we needed to make three modifications.",
            "paragraph_rank": 47,
            "section_rank": 6
        },
        {
            "section": "Modifications",
            "text": "Firstly, to compute the first moments as proposed in Ref. [6], we need to replace Eq. 1 with the following:",
            "paragraph_rank": 48,
            "section_rank": 6,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b5",
                    "start": 58,
                    "text": "[6]",
                    "end": 61
                }
            ]
        },
        {
            "section": "Modifications",
            "text": "Now the distribution of a measured x for a given particle type j is normalised to arbitrary value A j , which does not have to equal N j . As a result, we also need modify Eq. 13, which now becomes",
            "paragraph_rank": 49,
            "section_rank": 6
        },
        {
            "section": "Modifications",
            "text": "The rest of the procedure holds, and corrected N j could be computed by applying it for n = 1. Secondly, the measured x is traditionally associated with the particle mass, but it can be any measured quantity, not necessarily a single scalar value. In general, it could be a multi-dimensional vector x, e.g. mean energy loss and timeof-flight, as long as integration in function u is performed accordingly.",
            "paragraph_rank": 50,
            "section_rank": 6
        },
        {
            "section": "Modifications",
            "text": "Thirdly, measurement of x could be performed in several phase space bins, corresponding to different detector configurations. In such cases Eq. 1 takes form",
            "paragraph_rank": 51,
            "section_rank": 6
        },
        {
            "section": "Modifications",
            "text": "where \u03b8 denotes a configuration from a configuration space \u0398. Analogously, the definition of w (Eq. 2) has to take into account \u03b8 as well:",
            "paragraph_rank": 52,
            "section_rank": 6
        },
        {
            "section": "Modifications",
            "text": "where w j (x, \u03b8) denotes value of the jth identity variable for a measurement x registered in configuration \u03b8 . Finally, the computation of u (Eq. 13) has to take into account measurements in all configurations, so",
            "paragraph_rank": 53,
            "section_rank": 6
        },
        {
            "section": "Modifications",
            "text": "All three modifications have been described here separately for simplicity, but could be combined if necessary.",
            "paragraph_rank": 54,
            "section_rank": 6
        },
        {
            "text": "Implementation",
            "section_rank": 7
        },
        {
            "section": "Implementation",
            "text": "The Idhim program was designed to provide an easy way to obtain moments of the true multiplicity distribution of identified particles provided the detector resolution is know.",
            "paragraph_rank": 55,
            "section_rank": 7
        },
        {
            "section": "Implementation",
            "text": "The implementation in Java, using EJML 1 library for linear algebra operations, is available as open source. 2 The required input to the program includes:",
            "paragraph_rank": 56,
            "section_rank": 7,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b1",
                    "start": 109,
                    "text": "2",
                    "end": 110
                }
            ]
        },
        {
            "section": "Implementation",
            "text": "(i) a list of particle types in a text file, with each line providing a particle type name,",
            "paragraph_rank": 57,
            "section_rank": 7
        },
        {
            "section": "Implementation",
            "text": "moments in a tsv (i.e., tab-separated values) file, with each line describing one moment as a list if n 1 , . . . , n k indices, followed by the moment value, (iii) a list of phase space bins, where a detector response is known, as a tsv file (if there is more than one kinematic variables which define such bins, multiple tab-separated indices may be provided), (iv) a directory containing files with a detector response functions in each bin.",
            "paragraph_rank": 58,
            "section_rank": 7
        },
        {
            "section": "Implementation",
            "text": "An exemplary set of all needed files is provided with the program. The input format allows for applicability to a wide range of different experiments. Firstly, a number of considered particle types is arbitrary. In a typical case of particle identification it depends on a collision energy and available statistics, e.g., at low interaction energies one does not need to consider deuterons and/or Helium-3, whereas at high energies or with large available statistics they must be taken into account. Secondly, only",
            "paragraph_rank": 59,
            "section_rank": 7
        },
        {
            "section": "Implementation",
            "text": "moments, not the full distributions, need to be provided. Finally, in a typical experiment, a particle identification is performed by a set of detectors with an overlapping momentum coverage. Thus, a full momentum coverage of an experiment consists of regions with \u03c1 being 1D function, e.g., when particles are identified only by d E/dx or time-of-flight (ToF), or 2D function, e.g., when particles are identified by combined measurements of d E/dx and ToF. An example of such a non-uniform detector acceptance is shown in Fig. 1. Bins with any number of dimensions, which reflect changing detector configuration or particle yields, can be defined as long as density function for all particle types is given in the same points of the space.",
            "paragraph_rank": 60,
            "section_rank": 7,
            "ref_spans": [
                {
                    "type": "figure",
                    "start": 523,
                    "text": "Fig. 1",
                    "end": 529
                }
            ]
        },
        {
            "section": "Implementation",
            "text": "The next section includes example demonstrating the usefulness of the program features described above. The computation of all moments of multiplicity distributions up to the fourth order was tested on two models. The first one is a Monte Carlo model (so-called fast generator), where the number of particles of a given type produced in a single event was generated from Poisson distributions with a different free parameter \u03bb for each considered particle type. Test included four most popular particle types, namely electrons, pions, kaons and protons, with their respective \u03bb as 1, 10, 2, 4. The number of events is set to 1,000,000. Particles are generated according to the Poisson distribution and are uncorrelated (except the detector response), so the true values of generated moments are",
            "paragraph_rank": 61,
            "section_rank": 7
        },
        {
            "section": "Implementation",
            "text": "The generated cross-moments are defined as the multiplication of the pure ones. A simulated detector response consists of mean energy loss measurements in the Time Projection Chamber. For each particle, its mean energy loss was generated from a Gaussian distribution with parameters based on experimental data from Refs. [9,11] in two bins simulating the momentum dependence of the detector response. Testing several different momentum dependencies showed that particle distribution between bins does not affect the final results. An exemplary simulated dE/dx distribution in a single bin is shown in Fig. 2. 1   10   2   10   3   10   4   10   0100  0001  1000  0010  2000  1010  0020  0200  0101  0002  1100  0110  1001  0011  0300  0201  0102  0003  1200  0210  1101  0111  1002  0012  1110  1011  0120  0021  2100  2001  1020  0030  3000  2010  0400  0301  0202  0103  0004  2200  2101  2002  1210  0220  1111  0121  1012  0022  2110  2011  3100  3001  1120  1021  0130  0031  1300  0310  1201  0211  1102  0112  1003  0013  2020  4000  3010  1030   moment values. Both sources are correlated, so the standard error propagation is complicated and inconvenient. Instead, the statistical uncertainty is obtained using the bootstrap method [12].",
            "paragraph_rank": 62,
            "section_rank": 7,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b8",
                    "start": 321,
                    "text": "[9,",
                    "end": 324
                },
                {
                    "type": "bibr",
                    "ref_id": "b10",
                    "start": 324,
                    "text": "11]",
                    "end": 327
                },
                {
                    "type": "figure",
                    "start": 601,
                    "text": "Fig. 2",
                    "end": 607
                },
                {
                    "type": "table",
                    "start": 609,
                    "text": "1   10   2   10   3   10   4   10   0100  0001  1000  0010  2000  1010  0020  0200  0101  0002  1100  0110  1001  0011  0300  0201  0102  0003  1200  0210  1101  0111  1002  0012  1110  1011  0120  0021  2100  2001  1020  0030  3000  2010  0400  0301  0202  0103  0004  2200  2101  2002  1210  0220  1111  0121  1012  0022  2110  2011  3100  3001  1120  1021  0130  0031  1300  0310  1201  0211  1102  0112  1003  0013  2020  4000  3010  1030",
                    "end": 1051
                },
                {
                    "type": "bibr",
                    "ref_id": "b11",
                    "start": 1241,
                    "text": "[12]",
                    "end": 1245
                }
            ]
        },
        {
            "text": "Moment value",
            "section_rank": 8
        },
        {
            "section": "Moment value",
            "text": "Reconstructed and generated moments as well as their ratio are shown in Fig. 3. The ratio is 1 within the statistical uncertainty for all considered values.",
            "paragraph_rank": 63,
            "section_rank": 8,
            "ref_spans": [
                {
                    "type": "figure",
                    "start": 72,
                    "text": "Fig. 3",
                    "end": 78
                }
            ]
        },
        {
            "section": "Moment value",
            "text": "Another test was performed using 3 million p+p interactions at \u221a s N N = 17.3 GeV generated using the EPOS [13,14] model with the detector acceptance containing two types of acceptance regionsd E/dx only and combined ToF and d E/dx. An example of such a two dimensional distribution is shown in Fig. 4. The shape of the 2D distribution and its parameters were based on a real data analysis in Ref. [15].",
            "paragraph_rank": 64,
            "section_rank": 8,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b12",
                    "start": 107,
                    "text": "[13,",
                    "end": 111
                },
                {
                    "type": "bibr",
                    "ref_id": "b13",
                    "start": 111,
                    "text": "14]",
                    "end": 114
                },
                {
                    "type": "figure",
                    "start": 295,
                    "text": "Fig. 4",
                    "end": 301
                },
                {
                    "type": "bibr",
                    "ref_id": "b14",
                    "start": 398,
                    "text": "[15]",
                    "end": 402
                }
            ]
        },
        {
            "section": "Moment value",
            "text": "Again, in order to mimic the momentum dependence of the detector response, it was divided into several bins. Reconstructed and generated moments as well as their ratio are shown in Fig. 5. Again, the ratio is 1 within the statistical uncertainty for all considered values.",
            "paragraph_rank": 65,
            "section_rank": 8,
            "ref_spans": [
                {
                    "type": "figure",
                    "ref_id": "fig_3",
                    "start": 181,
                    "text": "Fig. 5",
                    "end": 187
                }
            ]
        },
        {
            "section": "Moment value",
            "text": "Both the procedure and its implementation are functioning as expected. The difference between generated and reconstructed first moments of N and W is negligible but in case of the higher orders, the differences can reach 70%. In order to accommodate for different possible shapes of the \u03c1 functions, they are delivered in a binned form. Thus, a proper binning is important to describe the functions' shapes. The identity method does not address other detector biases or its efficiency. Other possible biases should be addressed by the appropriate experimental tools (for examples and details see Refs. [16][17][18]).",
            "paragraph_rank": 66,
            "section_rank": 8,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b15",
                    "start": 602,
                    "text": "[16]",
                    "end": 606
                },
                {
                    "type": "bibr",
                    "ref_id": "b16",
                    "start": 606,
                    "text": "[17]",
                    "end": 610
                },
                {
                    "type": "bibr",
                    "ref_id": "b17",
                    "start": 610,
                    "text": "[18]",
                    "end": 614
                }
            ]
        },
        {
            "text": "Conclusion",
            "section_rank": 9
        },
        {
            "section": "Conclusion",
            "text": "In this paper we extend the identity method in two ways. Firstly, a new strict procedure to obtain nth order moments of multiplicity distribution of an arbitrary number of particles is discussed. Secondly, a software implementation of this procedure is presented. Provided a detector response is known, it computes any moments, including the first ones. It is equally precise both for low and high mean multiplicities. Two tests were performed in order to validate the program. The first test, based on simple fast generator check, showed that program works well in case of lack of correlations between particles. The difference between the recon -0100  0001  1000  0010  2000  1010  0020  0200  0101  0002  1100  0110  1001  0011  0300  0201  0102  0003  1200  0210  1101  0111  1002  0012  1110  1011  0120  0021  2100  2001  1020  0030  3000  2010  0400  0301  0202  0103  0004  2200  2101  2002  1210  0220  1111  0121  1012  0022  2110  2011  3100  3001  1120  1021  0130  0031  1300  0310  1201  0211  1102  0112  1003  0013  2020  4000  3010  1030  0040   Moment value   \u22121   10   1   10   2   10   3   10   0100  0001  1000  0010  2000  1010  0020  0200  0101  0002  1100  0110  1001  0011  0300  0201  0102  0003  1200  0210  1101  0111  1002  0012  1110  1011  0120  0021  2100  2001  1020  0030  3000  2010  0400  0301  0202  0103  0004  2200  2101  2002  1210  0220  1111  0121  1012  0022  2110  2011  3100  3001  1120  1021  0130  0031  1300  0310  1201  0211  1102  0112  1003  0013  2020  4000  3010  Reconstructed (black circles) and generated (red squares) moments and their ratio. The ratio uncertainty values for moments 0003 and 0004, omitted from the plot for clarity, equal 1.00 \u00b1 0.07 and 1.00 \u00b1 0.55, respectively structed and generated moments is at the level of statistical uncertainty or below. The second test was performed on p+p interactions simulated in the EPOS model. The second test confirmed that correlations between particles do not affect the program's efficiency. It also showed that Idhim can be easily used in the case of a non-uniform detector acceptance which contains different detector types. As a last comment we would like to stress that the successful analysis of moments of identified particle distributions depends on an understanding of a detector response. Possible flaws in description of the \u03c1 functions will propagate to the identity method and the final results. Moreover, the identity method does not compensate for a limited detector efficiency. Thus, \u03c1 distributions and mean W 's have to be corrected for a limited and often momentum-dependent detector efficiency by other known methods.",
            "paragraph_rank": 67,
            "section_rank": 9,
            "ref_spans": [
                {
                    "type": "table",
                    "start": 647,
                    "text": "-0100  0001  1000  0010  2000  1010  0020  0200  0101  0002  1100  0110  1001  0011  0300  0201  0102  0003  1200  0210  1101  0111  1002  0012  1110  1011  0120  0021  2100  2001  1020  0030  3000  2010  0400  0301  0202  0103  0004  2200  2101  2002  1210  0220  1111  0121  1012  0022  2110  2011  3100  3001  1120  1021  0130  0031  1300  0310  1201  0211  1102  0112  1003  0013  2020  4000  3010  1030  0040   Moment value   \u22121   10   1   10   2   10   3   10   0100  0001  1000  0010  2000  1010  0020  0200  0101  0002  1100  0110  1001  0011  0300  0201  0102  0003  1200  0210  1101  0111  1002  0012  1110  1011  0120  0021  2100  2001  1020  0030  3000  2010  0400  0301  0202  0103  0004  2200  2101  2002  1210  0220  1111  0121  1012  0022  2110  2011  3100  3001  1120  1021  0130  0031  1300  0310  1201  0211  1102  0112  1003  0013  2020  4000  3010",
                    "end": 1515
                }
            ]
        },
        {
            "text": "possible combinations of N j tuples \u03b7 j 1 , . . . , \u03b7 j N j (each containing k nonnegative integers) that sum up to \u03b7 j . We can notice that zero tuples, i.e., \u03b7 j i = (0, 0, . . . , 0), do not contribute to \u03bb j since u j (0, 0, . . . , 0) = 1. Let us then express the sequence \u03b7 j 1 , \u03b7 j 2 , . . . , \u03b7 j N j as a combination of several non-zero tuples. Let \u0393 j denote a set of all such combinations possible for \u03b7 j , so that each \u03b3 \u2208 \u0393 j consists of |\u03b3 | different non-zero tuples: \u03bc \u03b3 1 , \u03bc \u03b3 2 , . . . , \u03bc \u03b3 |\u03b3 | , each occurring m \u03b3 1 , m \u03b3 2 , . . . , m \u03b3 |\u03b3 | times, respectively. There are also N j \u2212 |\u03b3 | p=1 m \u03b3 p tuples equal to zero in the original sequence \u03b7",
            "paragraph_rank": 68,
            "section_rank": 10
        },
        {
            "text": "Fig. 1 Fig. 2",
            "section_rank": 11
        },
        {
            "section": "Fig. 1 Fig. 2",
            "text": "Fig. 1 NA61/SHINE detector acceptance (solid area) with indicated region where particles are identified via their energy loss (magenta stripes) and their time-of-flight (yellow stripes) in p+p interactions at \u221a s N N = 17.3 GeV",
            "paragraph_rank": 69,
            "section_rank": 11
        },
        {
            "text": "Fig. 3 Fig. 4",
            "section_rank": 12
        },
        {
            "section": "Fig. 3 Fig. 4",
            "text": "Fig. 3Reconstructed (black circles) and generated (red squares) moments and their ratio",
            "paragraph_rank": 70,
            "section_rank": 12
        },
        {
            "text": "Fig. 5",
            "section_rank": 13
        },
        {
            "section": "Fig. 5",
            "text": "Fig. 5Reconstructed (black circles) and generated (red squares) moments and their ratio. The ratio uncertainty values for moments 0003 and 0004, omitted from the plot for clarity, equal 1.00 \u00b1 0.07 and 1.00 \u00b1 0.55, respectively",
            "paragraph_rank": 71,
            "section_rank": 13
        },
        {
            "section": "Fig. 5",
            "text": "http://ejml.org.2 https://github.com/piotrmp/idhim.",
            "paragraph_rank": 72,
            "section_rank": 13,
            "ref_spans": [
                {
                    "type": "bibr",
                    "ref_id": "b1",
                    "start": 16,
                    "text": "2",
                    "end": 17
                }
            ]
        },
        {
            "text": "Acknowledgements",
            "section_rank": 15
        },
        {
            "section": "Acknowledgements",
            "text": "We would like to thank M. Gazdzicki   ",
            "paragraph_rank": 73,
            "section_rank": 15
        }
    ]
}